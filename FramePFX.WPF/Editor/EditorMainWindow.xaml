<views:WindowEx x:Class="FramePFX.WPF.Editor.EditorMainWindow"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:views="clr-namespace:FramePFX.WPF.Views"
            xmlns:shortcuts="clr-namespace:FramePFX.WPF.Shortcuts"
            xmlns:editor="clr-namespace:FramePFX.WPF.Editor"
            xmlns:converters="clr-namespace:FramePFX.WPF.Converters"
            xmlns:controls="clr-namespace:FramePFX.WPF.Controls"
            xmlns:wpf="clr-namespace:FramePFX.WPF"
            xmlns:avalonDock="clr-namespace:FramePFX.WPF.Themes.AvalonDock"
            xmlns:controls1="clr-namespace:FramePFX.WPF.Editor.Controls"
            xmlns:propertyEditing="clr-namespace:FramePFX.WPF.PropertyEditing"
            xmlns:cpe="clr-namespace:FramePFX.PropertyEditing;assembly=FramePFX"
            xmlns:b="clr-namespace:FramePFX.WPF.Shortcuts.Bindings"
            xmlns:acs="clr-namespace:FramePFX.WPF.AdvancedContextService"
            xmlns:ap="clr-namespace:FramePFX.WPF.AttachedProperties"
            xmlns:controls2="clr-namespace:FramePFX.WPF.Editor.Timeline.Controls"
            xmlns:notifications="clr-namespace:FramePFX.WPF.Notifications"
            xmlns:evm="clr-namespace:FramePFX.Editor.ViewModels;assembly=FramePFX"
            xmlns:cn="clr-namespace:FramePFX.Notifications;assembly=FramePFX"
            xmlns:ctx="clr-namespace:FramePFX.Editor.ViewModels.Timelines.Context;assembly=FramePFX"
            mc:Ignorable="d"
            d:DataContext="{d:DesignInstance evm:VideoEditorViewModel}"
            Width="1408" Height="792"
            Style="{StaticResource CustomWindowStyleEx}"
            Background="{DynamicResource PanelBorderBrush}"
            BorderBrush="{DynamicResource PanelBorderBrush}"
            TitlebarBrush="{DynamicResource ABrush.Tone6.Background.Static}"
            shortcuts:UIInputManager.IsInputSource="True"
            shortcuts:UIInputManager.FocusPath="Application/Editor">
    <Window.Resources>
        <editor:EditorTitleConverter x:Key="TitleConverter" DefaultTitle="Bootleg sony vegas (FramePFX v0.2.201)" />
        <converters:NullToBoolConverter x:Key="NullToDisabledConverter" NullValue="False" NonNullValue="True" />
        <Style TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource SliderThumb.Static.Foreground}" />
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{DynamicResource SliderVertical}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.Title>
        <MultiBinding Converter="{StaticResource TitleConverter}">
            <Binding Path="ActiveProject" />
            <Binding Path="ActiveProject.HasUnsavedChanges" />
            <Binding Path="ActiveProject.DataFolder" />
        </MultiBinding>
    </Window.Title>
    <Grid>
        <Menu VerticalAlignment="Top" Background="{DynamicResource ABrush.Tone6.Background.Static}" BorderBrush="{DynamicResource PanelBorderBrush}" BorderThickness="0 0 0 1">
            <MenuItem Header="File">
                <MenuItem Header="New Project" Command="{Binding NewProjectCommand, Mode=OneTime}" />
                <MenuItem Header="Open Project" Command="{Binding OpenProjectCommand, Mode=OneTime}" />
                <MenuItem Header="Save Project" Command="{Binding ActiveProject.SaveCommand}" IsEnabled="{Binding ActiveProject, Converter={StaticResource NullToDisabledConverter}}" />
                <MenuItem Header="Save Project As..." Command="{Binding ActiveProject.SaveAsCommand}" IsEnabled="{Binding ActiveProject, Converter={StaticResource NullToDisabledConverter}}" />
                <Separator />
                <MenuItem Header="Export" Command="{Binding ExportCommand, Mode=OneTime}" />
            </MenuItem>
            <MenuItem Header="test notification" Click="MenuItem_OnClick" />
            <MenuItem Header="Theme">
                <MenuItem Header="Deep Dark" Click="SetThemeClick" Uid="0" />
                <MenuItem Header="Soft Dark" Click="SetThemeClick" Uid="1" />
                <MenuItem Header="Dark Grey" Click="SetThemeClick" Uid="2" />
                <MenuItem Header="Grey" Click="SetThemeClick" Uid="3" />
                <MenuItem Header="Red and Black" Click="SetThemeClick" Uid="4" />
                <MenuItem Header="Light Theme PLEASE DONT USE FOR THE SAKE OF ALL THINGS HOLY D:" Click="SetThemeClick" Uid="5" />
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="Show logs" Click="ShowLogsClick" />
            </MenuItem>
        </Menu>
        <Grid Margin="0,19,0,0" IsEnabled="{Binding IsEditorEnabled, Converter={StaticResource InvertBoolConverter}}" UseLayoutRounding="True" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="7*" />
                <RowDefinition Height="1" />
                <RowDefinition Height="8*" />
            </Grid.RowDefinitions>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*" />
                    <ColumnDefinition Width="1" />
                    <ColumnDefinition Width="7*" />
                </Grid.ColumnDefinitions>
                <Grid Grid.Column="2" DataContext="{Binding Playback}">
                    <Border Background="{DynamicResource PanelBackground3}" VerticalAlignment="Bottom" Height="35" BorderBrush="{DynamicResource PanelBorderBrush}" BorderThickness="0 1 0 0">
                        <Grid>
                            <Button Content="Fit to Scale" Width="75" HorizontalAlignment="Left" Padding="1,0,0,0" Margin="5,5,0,5" Click="OnFitContentToWindowClick" />
                            <CheckBox IsChecked="{Binding ElementName=VPViewBox, Path=PanToCursorOnUserZoom}" Content="Zoom to cursor" Width="110" HorizontalAlignment="Left" Padding="1,0,0,0" Margin="85,5,0,5" />
                            <StackPanel Margin="0,5" Orientation="Horizontal" HorizontalAlignment="Center">
                                <Button Content="Play/Pause" Width="70" HorizontalAlignment="Left" Padding="1,0,0,0" Command="{Binding TogglePlayCommand, Mode=OneTime}" />
                                <Button Width="26" HorizontalAlignment="Left" Padding="1,0,0,0" Command="{Binding PlayCommand, Mode=OneTime}" Margin="5,0,0,0">
                                    <Polygon Width="16" Height="16" Points="0,16 0,0 16,8" Fill="{DynamicResource ABrush.ColourfulGlyph.Static}" />
                                </Button>
                                <Button Width="26" HorizontalAlignment="Left" Command="{Binding PauseCommand, Mode=OneTime}" Margin="5,0,0,0">
                                    <Grid Width="14" Height="16">
                                        <Rectangle Width="4" HorizontalAlignment="Left" Fill="{DynamicResource ABrush.ColourfulGlyph.Static}" />
                                        <Rectangle Width="4" HorizontalAlignment="Right" Fill="{DynamicResource ABrush.ColourfulGlyph.Static}" />
                                    </Grid>
                                </Button>
                            </StackPanel>
                            <Button Content="Settings" Width="75" HorizontalAlignment="Right" Padding="3,0,2,0" DataContext="{Binding Editor.ActiveProject}" Command="{Binding OpenSettingsCommand, Mode=OneTime}" Margin="0,5,5,5" />
                        </Grid>
                    </Border>
                    <controls:FreeMoveViewPortV2 DataContext="{Binding Editor.ActiveProject}" x:Name="VPViewBox" Margin="0,0,0,35" ClipToBounds="True" Background="{DynamicResource PanelBackground1}">
                        <wpf:SKAsyncViewPort Width="{Binding Settings.Width, FallbackValue=0}" Height="{Binding Settings.Height, FallbackValue=0}" x:Name="ViewPortElement" />
                    </controls:FreeMoveViewPortV2>
                </Grid>
                <Border IsEnabled="{Binding ActiveProject, Converter={StaticResource NullToDisabledConverter}}" Background="{DynamicResource PanelBackground2}">
                    <DockingManager DataContext="{Binding ActiveProject.ResourceManager}" Padding="0">
                        <DockingManager.Theme>
                            <avalonDock:GeneralDockTheme/>
                        </DockingManager.Theme>
                        <LayoutRoot x:Name="LayoutRoot">
                            <LayoutPanel Orientation="Horizontal">
                                <LayoutDocumentPane>
                                    <LayoutAnchorable Title="Resources" ContentId="FilesAndResources" CanHide="False" CanClose="False" CanAutoHide="False" CanDockAsTabbedDocument="True" CanFloat="True">
                                        <controls1:ResourcesPanelControl DataContext="{Binding}" shortcuts:UIInputManager.FocusPath="Application/Editor/Resources"/>
                                    </LayoutAnchorable>
                                    <LayoutAnchorable Title="Property Editor" ContentId="PropertyEditor" CanHide="False" CanClose="False" CanAutoHide="False" CanDockAsTabbedDocument="True" CanFloat="True">
                                        <propertyEditing:PropertyEditor x:Name="PFXPropertyEditor" EditorRegistry="{x:Static cpe:PFXPropertyEditorRegistry.Instance}" />
                                    </LayoutAnchorable>
                                </LayoutDocumentPane>
                            </LayoutPanel>
                        </LayoutRoot>
                    </DockingManager>
                </Border>
                <GridSplitter ResizeDirection="Columns" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Grid.Column="1" Margin="-3,-1,-3,0" SnapsToDevicePixels="True" />
            </Grid>
            <DockPanel Grid.Row="2" shortcuts:UIInputManager.FocusPath="Application/Editor/Timeline">
                <Border Background="{DynamicResource ABrush.Tone4.Border.Static}" VerticalAlignment="Bottom" Height="20" BorderThickness="0 1 0 0" DockPanel.Dock="Bottom">
                    <!-- Status bar -->
                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" x:Name="NotificationBarTextBlock" Padding="3,0" />
                    </StackPanel>
                </Border>
                <Border Background="{DynamicResource ABrush.Tone4.Border.Static}" Height="25" BorderThickness="0 0 0 1" DockPanel.Dock="Top">
                    <!-- Button bar above timeline/track panel -->
                    <DockPanel>
                        <b:InputStateCollection.Collection>
                            <b:InputStateCollection>
                                <b:InputStateBinding x:Name="StateUseAss1" InputStatePath="Application/Editor/UseStateAss1"/>
                                <b:InputStateBinding x:Name="StateUseAss2" InputStatePath="Application/Editor/UseStateAss2"/>
                                <b:InputStateBinding x:Name="StateUseAss3" InputStatePath="Application/Editor/UseStateAss3"/>
                                <b:InputStateBinding x:Name="StateUseAss4" InputStatePath="Application/Editor/UseStateAss4"/>
                            </b:InputStateCollection>
                        </b:InputStateCollection.Collection>
                        <!-- Left side -->
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                            <ToggleButton Content="Ass1" Padding="5,0" IsChecked="{Binding ElementName=StateUseAss1, Path=IsActive, Mode=TwoWay}"/>
                            <ToggleButton Content="Ass2" Padding="5,0" IsChecked="{Binding ElementName=StateUseAss2, Path=IsActive, Mode=TwoWay}"/>
                            <ToggleButton Content="Ass3" Padding="5,0" IsChecked="{Binding ElementName=StateUseAss3, Path=IsActive, Mode=TwoWay}"/>
                            <ToggleButton Content="Ass4" Padding="5,0" IsChecked="{Binding ElementName=StateUseAss4, Path=IsActive, Mode=TwoWay}"/>
                        </StackPanel>
                        <!-- Right Side -->
                        <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" />
                        <!-- Center -->
                        <Grid DockPanel.Dock="Left">
                            <ToggleButton Background="Transparent" BorderThickness="0" Content="Rec" Width="50" IsChecked="{Binding IsRecordingKeyFrames, Mode=TwoWay}" Margin="0,0,0,0" ToolTip="Record key frames. Modifying any automatable property will result in a new key frame being added" />
                        </Grid>
                    </DockPanel>
                </Border>
                <Border DataContext="{Binding ActiveProject}" IsEnabled="{Binding ., Converter={StaticResource NullToDisabledConverter}, Mode=TwoWay}">
                    <b:ShortcutCommandCollection.Collection>
                        <b:ShortcutCommandCollection>
                            <b:ShortcutCommandBinding ShortcutPath="Application/Editor/Timeline/TogglePlayPause" Command="{Binding Editor.Playback.TogglePlayCommand, Mode=OneWay}" />
                        </b:ShortcutCommandCollection>
                    </b:ShortcutCommandCollection.Collection>
                    <Grid DataContext="{Binding Timeline}" Grid.IsSharedSizeScope="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="40" SharedSizeGroup="TimelineHeaderSharedRow" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="250" SharedSizeGroup="TimelineLeftTrackListSharedGroup" />
                            <ColumnDefinition Width="1" />
                            <ColumnDefinition Width="20*" />
                        </Grid.ColumnDefinitions>
                        <Border Background="{DynamicResource ABrush.Tone6.Background.Static}" BorderThickness="0 0 0 1" BorderBrush="{DynamicResource PanelBorderBrush}">
                            <DockPanel Margin="8,0,0,0">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontSize="16" Text="{Binding PlayHeadFrame, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Left" FontWeight="Medium" />
                                    <TextBlock FontSize="15" Text="/" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,-2,3,0" />
                                    <TextBlock FontSize="12" Text="{Binding MaxDuration, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Right" />
                                </StackPanel>
                            </DockPanel>
                        </Border>
                        <Border shortcuts:UIInputManager.FocusPath="Application/Editor/Timeline/TrackControllers"
                                Grid.Row="1" Grid.Column="0" BorderThickness="0 0 0 0"
                                Background="{DynamicResource PanelBackground3}"
                                BorderBrush="{DynamicResource ABrush.Tone6.Border.Static}" />
                        <ListBox x:Name="TrackListBox"
                                 shortcuts:UIInputManager.FocusPath="Application/Editor/Timeline/TrackControllers"
                                 acs:AdvancedContextMenu.ContextGenerator="{x:Static ctx:TrackContextGenerator.Instance}"
                                 Style="{StaticResource TrackListBoxStyle}"
                                 Grid.Row="1" Grid.Column="0"
                                 SelectionMode="Extended"
                                 ItemsSource="{Binding Tracks}"
                                 SelectedItem="{Binding PrimarySelectedTrack}"
                                 ap:MultiSelectorHelper.SelectedItems="{Binding SelectedTracks}"
                                 Background="{DynamicResource ABrush.Tone4.Background.Static}" BorderBrush="Transparent"
                                 BorderThickness="0 0 0 0" Padding="0" />
                        <controls2:TimelineControl x:Name="TheTimeline1"
                                                   Background="{DynamicResource PanelBackground2}"
                                                   ItemsSource="{Binding Tracks, Mode=OneTime}"
                                                   BorderThickness="0"
                                                   Grid.RowSpan="2" Grid.Column="2"
                                                   BorderBrush="{DynamicResource ABrush.Tone2.Border.Static}"
                                                   MaxDuration="{Binding MaxDuration, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                   shortcuts:UIInputManager.FocusPath="Application/Editor/Timeline/Surface">
                            <b:ShortcutCommandCollection.Collection>
                                <b:ShortcutCommandCollection>
                                    <b:ShortcutCommandBinding ShortcutPath="Application/Editor/Timeline/Surface/MoveSelectedTrackUp" Command="{Binding MoveSelectedUpCommand, Mode=OneTime}" />
                                    <b:ShortcutCommandBinding ShortcutPath="Application/Editor/Timeline/Surface/MoveSelectedTrackDown" Command="{Binding MoveSelectedDownCommand, Mode=OneTime}" />
                                </b:ShortcutCommandCollection>
                            </b:ShortcutCommandCollection.Collection>
                        </controls2:TimelineControl>
                        <GridSplitter Background="Transparent" ResizeDirection="Columns" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1" BorderThickness="0" Grid.RowSpan="2" Margin="-5,-1,0,0" SnapsToDevicePixels="True" />
                    </Grid>
                </Border>
            </DockPanel>
            <GridSplitter Margin="0,-3,0,-2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="1" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True" />
            <GridSplitter Margin="0,21,0,-26" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="1" Background="Transparent" BorderThickness="0" SnapsToDevicePixels="True" />
        </Grid>
        <Grid x:Name="NotificationPanelPopup"
              d:DataContext="{d:DesignInstance cn:NotificationPanelViewModel}"
              HorizontalAlignment="Right"
              VerticalAlignment="Bottom">
            <Border Background="Transparent">
                <ScrollViewer MaxHeight="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type editor:EditorMainWindow}}, Path=ActualHeight}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" CanContentScroll="False">
                    <notifications:NotificationList x:Name="PopupNotificationList" ItemsSource="{Binding Notifications, Mode=OneTime}" ItemTemplateSelector="{StaticResource NotificationTemplateSelector}" MinWidth="300" />
                </ScrollViewer>
            </Border>
        </Grid>
    </Grid>
</views:WindowEx>