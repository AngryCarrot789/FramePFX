<v:WindowEx x:Class="FramePFX.WPF.Editor.MainWindow.EditorMainWindow"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:v="clr-namespace:FramePFX.WPF.Views"
            xmlns:sc="clr-namespace:FramePFX.WPF.Shortcuts"
            xmlns:editor="clr-namespace:FramePFX.WPF.Editor"
            xmlns:converters="clr-namespace:FramePFX.WPF.Converters"
            xmlns:controls="clr-namespace:FramePFX.WPF.Controls"
            xmlns:wpf="clr-namespace:FramePFX.WPF"
            xmlns:av="clr-namespace:FramePFX.WPF.Themes.AvalonDock"
            xmlns:pe="clr-namespace:FramePFX.WPF.PropertyEditing"
            xmlns:cpe="clr-namespace:FramePFX.PropertyEditing;assembly=FramePFX"
            xmlns:b="clr-namespace:FramePFX.WPF.Shortcuts.Bindings"
            xmlns:ctrl="clr-namespace:FramePFX.WPF.Editor.Timeline.Controls"
            xmlns:nn="clr-namespace:FramePFX.WPF.Notifications"
            xmlns:evm="clr-namespace:FramePFX.Editor.ViewModels;assembly=FramePFX"
            xmlns:n="clr-namespace:FramePFX.Notifications;assembly=FramePFX"
            xmlns:resources="clr-namespace:FramePFX.WPF.Editor.Resources"
            mc:Ignorable="d"
            d:DataContext="{d:DesignInstance evm:VideoEditorViewModel}"
            Width="1408" Height="840"
            Style="{StaticResource CustomWindowStyleEx}"
            Background="{DynamicResource PanelBackground1}"
            BorderBrush="{DynamicResource PanelBorderBrush}"
            TitlebarBrush="{DynamicResource ABrush.Tone6.Background.Static}"
            sc:UIInputManager.FocusPath="Application/Editor">
    <Window.Resources>
        <editor:EditorTitleConverter x:Key="TitleConverter" DefaultTitle="Bootleg sony vegas (FramePFX v0.2.201)" />
        <converters:NullToBoolConverter x:Key="NullToDisabledConverter" NullValue="False" NonNullValue="True" />
        <Style TargetType="{x:Type Slider}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource SliderThumb.Static.Foreground}" />
            <Setter Property="Template" Value="{StaticResource SliderHorizontal}" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Template" Value="{DynamicResource SliderVertical}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Window.Title>
        <MultiBinding Converter="{StaticResource TitleConverter}">
            <Binding Path="ActiveProject" />
            <Binding Path="ActiveProject.HasUnsavedChanges" />
            <Binding Path="ActiveProject.DataFolder" />
        </MultiBinding>
    </Window.Title>
    <Grid>
        <DockPanel>
            <Menu DockPanel.Dock="Top" Background="{DynamicResource ABrush.Tone6.Background.Static}" BorderBrush="{DynamicResource PanelBorderBrush}" BorderThickness="0 0 0 1">
                <MenuItem Header="File">
                    <MenuItem Header="New Project" Command="{Binding NewProjectCommand, Mode=OneTime}" />
                    <MenuItem Header="Open Project" Command="{Binding OpenProjectCommand, Mode=OneTime}" />
                    <MenuItem Header="Save Project" Command="{Binding ActiveProject.SaveCommand}" IsEnabled="{Binding ActiveProject, Converter={StaticResource NullToDisabledConverter}}" />
                    <MenuItem Header="Save Project As..." Command="{Binding ActiveProject.SaveAsCommand}" IsEnabled="{Binding ActiveProject, Converter={StaticResource NullToDisabledConverter}}" />
                    <Separator />
                    <MenuItem Header="Export" Command="{Binding ExportCommand, Mode=OneTime}" />
                </MenuItem>
                <MenuItem Header="test notification" Click="MenuItem_OnClick" />
                <MenuItem Header="Theme">
                    <MenuItem Header="Deep Dark" Click="SetThemeClick" Uid="0" />
                    <MenuItem Header="Soft Dark (default)" Click="SetThemeClick" Uid="1" />
                    <MenuItem Header="Dark Grey" Click="SetThemeClick" Uid="2" />
                    <MenuItem Header="Grey" Click="SetThemeClick" Uid="3" />
                    <MenuItem Header="Red and Black" Click="SetThemeClick" Uid="4" />
                    <MenuItem Header="Light Theme PLEASE DONT USE FOR THE SAKE OF ALL THINGS HOLY D:" Click="SetThemeClick" Uid="5" />
                </MenuItem>
                <MenuItem Header="Help">
                    <MenuItem Header="Show logs" Click="ShowLogsClick" />
                </MenuItem>
            </Menu>
            <Border DockPanel.Dock="Bottom" Background="{DynamicResource ABrush.Tone4.Border.Static}" VerticalAlignment="Bottom" Height="20" BorderThickness="0 1 0 0">
                <!-- Status bar -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" x:Name="NotificationBarTextBlock" Padding="3,0" />
                </StackPanel>
            </Border>
            <Grid>
                <Border Background="{DynamicResource PanelBackground1}" IsEnabled="{Binding IsEditorEnabled, Mode=OneWay}">
                    <DockingManager>
                        <DockingManager.Theme>
                            <av:GeneralDockTheme/>
                        </DockingManager.Theme>
                        <LayoutRoot x:Name="LayoutRoot">
                            <LayoutPanel Orientation="Vertical">
                                <LayoutPanel Orientation="Horizontal">
                                    <LayoutAnchorablePane DockWidth="75*">
                                        <LayoutAnchorable Title="Resources" ContentId="FilesAndResources" CanHide="False" CanClose="False" CanAutoHide="False" CanDockAsTabbedDocument="True" CanFloat="True">
                                            <resources:ResourcesPanelControl DataContext="{Binding ActiveProject.ResourceManager}" sc:UIInputManager.FocusPath="Application/Editor/Resources"/>
                                        </LayoutAnchorable>
                                        <LayoutAnchorable Title="Property Editor" ContentId="PropertyEditor" CanHide="False" CanClose="False" CanAutoHide="False" CanDockAsTabbedDocument="True" CanFloat="True">
                                            <pe:PropertyEditor x:Name="PFXPropertyEditor" EditorRegistry="{x:Static cpe:PFXPropertyEditorRegistry.Instance}" />
                                        </LayoutAnchorable>
                                    </LayoutAnchorablePane>
                                    <LayoutAnchorablePane DockWidth="60*">
                                        <LayoutAnchorable Title="Viewport" ContentId="VideoEditorViewPort" CanHide="False" CanClose="False" 
                                                          CanAutoHide="False" CanDockAsTabbedDocument="True" CanFloat="True">
                                            <Grid DataContext="{Binding Playback}" sc:UIInputManager.FocusPath="Application/Editor/ViewPort">
                                                <Border Background="{DynamicResource PanelBackground3}" VerticalAlignment="Bottom" Height="35" BorderBrush="{DynamicResource PanelBorderBrush}" BorderThickness="0 1 0 0">
                                                    <Grid>
                                                        <Button Content="Fit to Scale" Width="75" HorizontalAlignment="Left" Padding="1,0,0,0" Margin="5,5,0,5" Click="OnFitContentToWindowClick" />
                                                        <CheckBox IsChecked="{Binding PanToCursorOnUserZoom, ElementName=VPViewBox}" Content="Zoom to cursor" Width="110" HorizontalAlignment="Left" Padding="1,0,0,0" Margin="85,5,0,5" />
                                                        <StackPanel Margin="0,5" Orientation="Horizontal" HorizontalAlignment="Center">
                                                            <Button Content="Play/Pause" Width="70" HorizontalAlignment="Left" Padding="1,0,0,0" Command="{Binding TogglePlayCommand, Mode=OneTime}" />
                                                            <Button Width="26" HorizontalAlignment="Left" Padding="1,0,0,0" Command="{Binding PlayCommand, Mode=OneTime}" Margin="5,0,0,0">
                                                                <Polygon Width="16" Height="16" Points="0,16 0,0 16,8" Fill="{DynamicResource ABrush.ColourfulGlyph.Static}" />
                                                            </Button>
                                                            <Button Width="26" HorizontalAlignment="Left" Command="{Binding PauseCommand, Mode=OneTime}" Margin="5,0,0,0">
                                                                <Grid Width="14" Height="16">
                                                                    <Rectangle Width="4" HorizontalAlignment="Left" Fill="{DynamicResource ABrush.ColourfulGlyph.Static}" />
                                                                    <Rectangle Width="4" HorizontalAlignment="Right" Fill="{DynamicResource ABrush.ColourfulGlyph.Static}" />
                                                                </Grid>
                                                            </Button>
                                                            <CheckBox Margin="5,0,0,0" IsChecked="{Binding UseNearestNeighbourRendering, ElementName=ViewPortElement, Mode=TwoWay}" Content="Use NN Render" Padding="1,0,0,0"
                                                                ToolTip="Use nearest-neighbour rendering, which does not use smoothing between pixels. This is only apparent when zoomed in or with low resolution images"/>
                                                        </StackPanel>
                                                        <Button Content="Settings" Width="75" HorizontalAlignment="Right" Padding="3,0,2,0" DataContext="{Binding Editor.ActiveProject}" Command="{Binding OpenSettingsCommand, Mode=OneTime}" Margin="0,5,5,5" />
                                                    </Grid>
                                                </Border>
                                                <controls:FreeMoveViewPortV2 DataContext="{Binding Editor.ActiveProject}" x:Name="VPViewBox" Margin="0,0,0,35" ClipToBounds="True" Background="{DynamicResource PanelBackground1}">
                                                    <wpf:SKAsyncViewPort Width="{Binding Settings.Width, FallbackValue=0}" Height="{Binding Settings.Height, FallbackValue=0}" x:Name="ViewPortElement" />
                                                </controls:FreeMoveViewPortV2>
                                            </Grid>
                                        </LayoutAnchorable>
                                    </LayoutAnchorablePane>
                                </LayoutPanel>
                                <LayoutAnchorablePane DockHeight="350">
                                    <LayoutAnchorable Title="Main Timeline" ContentId="PropertyEditor" CanHide="False" CanClose="False" CanAutoHide="False" CanDockAsTabbedDocument="True" CanFloat="True">
                                        <Border Grid.Row="2" DataContext="{Binding ActiveProject}" 
                                            IsEnabled="{Binding ., Converter={StaticResource NullToDisabledConverter}, Mode=TwoWay}"
                                            sc:UIInputManager.FocusPath="Application/Editor/Timeline">
                                            <ctrl:TimelineControl DataContext="{Binding Timeline, Mode=OneTime}">
                                                <b:ShortcutCommandCollection.Collection>
                                                    <b:ShortcutCommandCollection>
                                                        <b:ShortcutCommandBinding ShortcutPath="Application/Editor/Timeline/TogglePlayPause" Command="{Binding Project.Editor.Playback.TogglePlayCommand, Mode=OneWay}" />
                                                    </b:ShortcutCommandCollection>
                                                </b:ShortcutCommandCollection.Collection>
                                            </ctrl:TimelineControl>
                                        </Border>
                                    </LayoutAnchorable>
                                </LayoutAnchorablePane>
                            </LayoutPanel>
                        </LayoutRoot>
                    </DockingManager>
                </Border>
                <Grid x:Name="NotificationPanelPopup"
                      d:DataContext="{d:DesignInstance {x:Type n:NotificationPanelViewModel}}"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Bottom"
                      MaxHeight="{Binding ActualHeight, RelativeSource={RelativeSource AncestorType={x:Type Grid}}}">
                    <Border Background="Transparent">
                        <ScrollViewer VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" 
                                      HorizontalScrollBarVisibility="Auto" CanContentScroll="False">
                            <nn:NotificationList x:Name="PopupNotificationList" 
                                                 ItemsSource="{Binding Notifications, Mode=OneTime}" 
                                                 ItemTemplateSelector="{StaticResource NotificationTemplateSelector}" MinWidth="300" />
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Grid>
        </DockPanel>
    </Grid>
</v:WindowEx>