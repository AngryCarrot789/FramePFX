<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:res="clr-namespace:FramePFX.WPF.Editor.Resources"
                    xmlns:viewModels="clr-namespace:FramePFX.Editor.ResourceManaging.ViewModels;assembly=FramePFX"
                    xmlns:rc="clr-namespace:FramePFX.Editor.ResourceManaging.ViewModels.Resources;assembly=FramePFX"
                    xmlns:c="clr-namespace:FramePFX.WPF.Converters"
                    xmlns:mst="clr-namespace:FramePFX.WPF.Controls.TreeViews.Controls"
                    mc:Ignorable="d">

    <Style TargetType="{x:Type res:BaseResourceItemControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="2" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone6.Background.Static}" />
        <Setter Property="ContentBackground" Value="{DynamicResource ABrush.Tone4.Background.Static}" />
        <Setter Property="HeaderBackground" Value="Transparent" />
        <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone6.Border.Static}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type res:BaseResourceItemControl}">
                    <Border x:Name="Bd" Width="150" Height="100" BorderThickness="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}">
                        <Border x:Name="PART_DropActivityBorder" BorderThickness="0">
                            <Grid>
                                <Border x:Name="PART_HeaderBorder" VerticalAlignment="Bottom" Height="24" BorderThickness="0,1,0,0"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        Background="{TemplateBinding HeaderBackground}">
                                    <Grid>
                                        <TextBlock Text="{TemplateBinding HeaderText}"
                                                   Padding="3" VerticalAlignment="Center"
                                                   TextTrimming="CharacterEllipsis"
                                                   ToolTip="{TemplateBinding HeaderText}"
                                                   HorizontalAlignment="Left"/>
                                        <TextBlock Text="{Binding ReferenceCount, Mode=OneWay}"
                                                   Padding="4,3" VerticalAlignment="Center"
                                                   TextTrimming="CharacterEllipsis"
                                                   ToolTip="The number of actual live references to this resources"
                                                   HorizontalAlignment="Right"/>
                                    </Grid>
                                </Border>
                                <Border Margin="0,0,0,24" Background="{TemplateBinding ContentBackground}" SnapsToDevicePixels="True">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDroppableTargetOver" Value="True">
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="OrangeRed" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.MouseOver.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.MouseOver.Border}" />
                            <Setter Property="Background" TargetName="PART_HeaderBorder" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type res:BaseResourceItemControl}}, Path=HeaderMouseOverBackground}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="False" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.SelectedInactive.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="LightGreen" />
                            <!--
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.SelectedInactive.Border}" />
                            -->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelectionActive" Value="True" />
                                <Condition Property="IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.SelectedActive.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="LightGreen" />
                            <!--
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.SelectedActive.Border}" />
                            -->
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource ABrush.Foreground.Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <res:ResourceItemContainerStyleSelector x:Key="ResourceItemContainerStyleSelector">
        <res:ResourceItemContainerStyleSelector.ResourceItemStyle>
            <!-- d:DataContext="{d:DesignInstance viewModels:ResourceItemViewModel}" -->
            <Style TargetType="{x:Type res:ResourceItemControl}" BasedOn="{StaticResource {x:Type res:BaseResourceItemControl}}">
                <Setter Property="HeaderText" Value="{Binding DisplayName, Mode=OneWay}" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsOnline, Mode=OneWay}" Value="False">
                        <Setter Property="HeaderBackground" Value="DarkRed" />
                        <Setter Property="HeaderMouseOverBackground" Value="Red" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </res:ResourceItemContainerStyleSelector.ResourceItemStyle>
        <res:ResourceItemContainerStyleSelector.ResourceFolderStyle>
            <!-- d:DataContext="{d:DesignInstance viewModels:ResourceFolderViewModel}" -->
            <Style TargetType="{x:Type res:ResourceFolderControl}" BasedOn="{StaticResource {x:Type res:BaseResourceItemControl}}">
                <Setter Property="HeaderText" Value="{Binding DisplayName, Mode=OneWay}" />
            </Style>
        </res:ResourceItemContainerStyleSelector.ResourceFolderStyle>
    </res:ResourceItemContainerStyleSelector>
    <res:ResourceItemContainerDataTemplateSelector x:Key="ResourceItemContainerDataTemplateSelector">
        <res:ResourceItemContainerDataTemplateSelector.ResourceItemTemplate>
            <DataTemplate DataType="{x:Type viewModels:ResourceItemViewModel}">
                <TextBlock Text="{Binding Path=DisplayName, Mode=OneWay}" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="{Binding DisplayName, Mode=OneWay}" />
            </DataTemplate>
        </res:ResourceItemContainerDataTemplateSelector.ResourceItemTemplate>
        <res:ResourceItemContainerDataTemplateSelector.ResourceItemColourTemplate>
            <DataTemplate DataType="{x:Type rc:ResourceColourViewModel}">
                <Border Background="{Binding Colour, Converter={x:Static c:SKColorToBrushConverter.Instance}}" />
            </DataTemplate>
        </res:ResourceItemContainerDataTemplateSelector.ResourceItemColourTemplate>
        <res:ResourceItemContainerDataTemplateSelector.ResourceFolderTemplate>
            <DataTemplate DataType="{x:Type viewModels:ResourceFolderViewModel}">
                <TextBlock Text="{Binding Path=Items.Count, Mode=OneWay, StringFormat='({0} Items)'}" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </DataTemplate>
        </res:ResourceItemContainerDataTemplateSelector.ResourceFolderTemplate>
    </res:ResourceItemContainerDataTemplateSelector>

    <ItemsPanelTemplate x:Key="ResourceListControlWrapPanelTemplate">
        <WrapPanel Orientation="Horizontal" />
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="ResourceListControlStackPanelTemplate">
        <StackPanel Orientation="Vertical" />
    </ItemsPanelTemplate>

    <Style TargetType="res:ResourceListControl">
        <Setter Property="Background" Value="{DynamicResource ListBox.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ListBox.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource ResourceItemContainerStyleSelector}" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource ResourceItemContainerDataTemplateSelector}" />
        <Setter Property="ItemsPanel" Value="{StaticResource ResourceListControlWrapPanelTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type res:ResourceListControl}">
                    <Border x:Name="Bd" Padding="1" SnapsToDevicePixels="true"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer x:Name="PART_ScrollViewer" Focusable="false" Padding="{TemplateBinding Padding}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemDirection" Value="Horizontal">
                            <Setter Property="ItemsPanel" Value="{StaticResource ResourceListControlWrapPanelTemplate}" />
                            <Setter TargetName="PART_ScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
                        </Trigger>
                        <Trigger Property="ItemDirection" Value="Vertical">
                            <Setter Property="ItemsPanel" Value="{StaticResource ResourceListControlStackPanelTemplate}" />
                            <Setter TargetName="PART_ScrollViewer" Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ListBox.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type res:ResourceTreeView}" BasedOn="{StaticResource {x:Type mst:MultiSelectTreeView}}">
        <Style.Triggers>
            <Trigger Property="IsDroppableTargetOver" Value="True">
                <Setter Property="BorderBrush" Value="OrangeRed" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type res:ResourceTreeViewItem}" BasedOn="{StaticResource {x:Type mst:MultiSelectTreeViewItem}}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="1,2" />
        <Style.Triggers>
            <Trigger Property="IsDroppableTargetOver" Value="True">
                <Setter Property="Background" Value="OrangeRed" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>