<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:pe="clr-namespace:FramePFX.WPF.PropertyEditing"
                    xmlns:dragger="clr-namespace:FramePFX.WPF.Controls.Dragger"
                    xmlns:attached="clr-namespace:FramePFX.WPF.Themes.Attached"
                    xmlns:primitives="clr-namespace:FramePFX.PropertyEditing.Editor.Primitives;assembly=FramePFX"
                    xmlns:pec="clr-namespace:FramePFX.PropertyEditing;assembly=FramePFX"
                    xmlns:c="clr-namespace:FramePFX.WPF.Converters"
                    xmlns:converters="clr-namespace:FramePFX.WPF.PropertyEditing.Converters"
                    xmlns:video="clr-namespace:FramePFX.Editor.ViewModels.Timelines.Effects.Video;assembly=FramePFX"
                    xmlns:acs="clr-namespace:FramePFX.WPF.AdvancedContextService"
                    xmlns:effects="clr-namespace:FramePFX.Editor.PropertyEditors.Effects;assembly=FramePFX"
                    mc:Ignorable="d">
    <PathGeometry x:Key="ResetGeometry">F1 M 38,20.5833C 42.9908,20.5833 47.4912,22.6825 50.6667,26.046L 50.6667,17.4167L 55.4166,22.1667L 55.4167,34.8333L 42.75,34.8333L 38,30.0833L 46.8512,30.0833C 44.6768,27.6539 41.517,26.125 38,26.125C 31.9785,26.125 27.0037,30.6068 26.2296,36.4167L 20.6543,36.4167C 21.4543,27.5397 28.9148,20.5833 38,20.5833 Z M 38,49.875C 44.0215,49.875 48.9963,45.3932 49.7703,39.5833L 55.3457,39.5833C 54.5457,48.4603 47.0852,55.4167 38,55.4167C 33.0092,55.4167 28.5088,53.3175 25.3333,49.954L 25.3333,58.5833L 20.5833,53.8333L 20.5833,41.1667L 33.25,41.1667L 38,45.9167L 29.1487,45.9167C 31.3231,48.3461 34.483,49.875 38,49.875 Z</PathGeometry>
    <PathGeometry x:Key="ActiveCheckGeometry">F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z</PathGeometry>
    <s:Double x:Key="FloatMinValue">-3.402823E+38</s:Double>
    <s:Double x:Key="FloatMaxValue">3.402823E+38</s:Double>
    <SolidColorBrush x:Key="SeparatorMouseOverBrush" Color="{DynamicResource AColour.AccentTone2.Border.Static}" />

    <DataTemplate x:Key="ScaleOriginGridDataTemplate">
        <Grid Background="{DynamicResource ABrush.Tone1.Background.Static}" Width="120" Height="120"
              d:DataContext="{d:DesignInstance effects:MotionEffectDataSingleEditorViewModel}"
              DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Popup}}, Path=PlacementTarget.DataContext}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="5"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="5"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="5"/>
            </Grid.RowDefinitions>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="0" Grid.Column="1" Grid.Row="1" BorderThickness="0" ToolTip="Top-left corner (0.0, 0.0)">
                <Path Data="M 2,12 2,2 12,2" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="1" Grid.Column="3" Grid.Row="1" BorderThickness="0" ToolTip="Top-middle (0.5, 0.0)">
                <Path Margin="0,-3,0,0" Data="M 2,0 12,0" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="2" Grid.Column="5" Grid.Row="1" BorderThickness="0" ToolTip="Top-right corner (1.0, 0.0)">
                <Path Data="M 2,2 12,2 12,12" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="3" Grid.Column="1" Grid.Row="3" BorderThickness="0" ToolTip="Middle-left side (0.0, 0.5)">
                <Path Margin="-3,0,0,0" Data="M 0,2 0,12" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="4" Grid.Column="3" Grid.Row="3" BorderThickness="0" ToolTip="Middle (0.5, 0.5)">
                <Path Margin="-3,0,0,0" Data="M 2,2 12,2 12,12 2,12 Z" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="5" Grid.Column="5" Grid.Row="3" BorderThickness="0" ToolTip="Middle-right side (1.0, 0.5)">
                <Path Data="M 11,2 11,12" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="6" Grid.Column="1" Grid.Row="5" BorderThickness="0" ToolTip="Bottom-left corner (0, 1.0)">
                <Path Data="M 2,2 2,12 12,12" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="7" Grid.Column="3" Grid.Row="5" BorderThickness="0" ToolTip="Bottom-middle (0.5, 1.0)">
                <Path Margin="0,0,0,-3" Data="M 2,11 12,11" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="8" Grid.Column="5" Grid.Row="5" BorderThickness="0" ToolTip="Bottom-right (1.0, 1.0)">
                <Path Data="M 2,12 12,12 12,2" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
        </Grid>
    </DataTemplate>

    <Style x:Key="ScaleOriginGridPopupStyle" TargetType="{x:Type Popup}">
        <Setter Property="StaysOpen" Value="False"/>
        <Setter Property="Placement" Value="MousePoint"/>
    </Style>

    <Style x:Key="HierarchicalExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone5.Background.Static}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid d:DataContext="{d:DesignInstance pec:BasePropertyGroupViewModel}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0, Mode=TwoWay}" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1, Mode=TwoWay}" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2, Mode=TwoWay}" />
                            </Grid.ColumnDefinitions>
                            <!--
                            <Border IsHitTestVisible="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1" Background="{DynamicResource ABrush.Tone8.Background.Static}" Width="1"/>
                            -->
                            <Grid Background="{TemplateBinding Background}" Grid.ColumnSpan="3" SnapsToDevicePixels="False" Margin="0,3" HorizontalAlignment="Left">
                                <Path x:Name="arrow" Data="M 2,0 L 6,4 L 2,8"
                                      HorizontalAlignment="Left"
                                      SnapsToDevicePixels="false"
                                      Stroke="{DynamicResource Expander.Static.Arrow.Stroke}"
                                      StrokeThickness="2" VerticalAlignment="Center"
                                      Width="10" Margin="5,1,0,0" />
                                <ContentPresenter Margin="19,0,0,0" x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                            <GridSplitter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1" Background="Transparent" Margin="-4,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 0,0 L 4,4.5 L 8,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HierarchicalExpanderSelectableToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone5.Background.Static}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid d:DataContext="{d:DesignInstance pec:BasePropertyGroupViewModel}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0, Mode=TwoWay}" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1, Mode=TwoWay}" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2, Mode=TwoWay}" />
                            </Grid.ColumnDefinitions>
                            <!--
                        <Border IsHitTestVisible="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1" Background="{DynamicResource ABrush.Tone8.Background.Static}" Width="1"/>
                        -->
                            <Grid Background="{TemplateBinding Background}" Grid.ColumnSpan="3" SnapsToDevicePixels="False" Margin="0,3" HorizontalAlignment="Left">
                                <Path x:Name="arrow" Data="M 2,0 L 6,4 L 2,8"
                                  HorizontalAlignment="Left"
                                  SnapsToDevicePixels="false"
                                  Stroke="{DynamicResource Expander.Static.Arrow.Stroke}"
                                  StrokeThickness="2" VerticalAlignment="Center"
                                  Width="10" Margin="5,1,0,0" />
                                <ContentPresenter Margin="19,0,0,0" x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                            <Button Command="{Binding CollapseHierarchyCommand, Mode=OneTime}" ToolTip="Collapse hierarchy" HorizontalAlignment="Right" Width="23" Grid.Column="2" BorderThickness="0" Background="Transparent">
                                <TextBlock Text="&gt;&lt;" FontSize="12">
                                    <TextBlock.LayoutTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="90"/>
                                        </TransformGroup>
                                    </TextBlock.LayoutTransform>
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="1"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Button>
                            <Button Command="{Binding ExpandHierarchyCommand, Mode=OneTime}" ToolTip="Expand hierarchy" HorizontalAlignment="Right" Width="23" Margin="0,0,23,0" Grid.Column="2" BorderThickness="0" Background="Transparent">
                                <TextBlock Text="&lt;-&gt;" FontFamily="Consolas" FontSize="10">
                                    <TextBlock.LayoutTransform>
                                        <TransformGroup>
                                            <RotateTransform Angle="90"/>
                                        </TransformGroup>
                                    </TextBlock.LayoutTransform>
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="1"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Button>
                            <GridSplitter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1" Background="Transparent" Margin="-4,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 0,0 L 4,4.5 L 8,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="Expander_TrueDataTemplate">
        <TextBlock Text="TRUEEEE"/>
    </DataTemplate>

    <DataTemplate x:Key="Expander_FalseDataTemplate">
        <TextBlock Text="Falsee"/>
    </DataTemplate>

    <c:BoolConverter x:Key="ExpanderToggleButtonStyleConverter" 
                     TrueValue="{StaticResource HierarchicalExpanderSelectableToggleButtonStyle}"
                     FalseValue="{StaticResource HierarchicalExpanderToggleButtonStyle}"/>

    <c:BoolConverter x:Key="ExpanderToggleButtonContentTemplateSelectorConverter" 
                     TrueValue="{StaticResource Expander_TrueDataTemplate}"
                     FalseValue="{StaticResource Expander_FalseDataTemplate}"/>

    <Style x:Key="HierarchicalExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch"
                            d:DataContext="{d:DesignInstance pec:BasePropertyGroupViewModel}"
                            acs:AdvancedContextMenu.ContextProvider="{Binding}">
                        <DockPanel>
                            <Grid DockPanel.Dock="Top" Margin="0,1,0,1" Background="{TemplateBinding Background}">
                                <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                              ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                              Content="{TemplateBinding Header}" DockPanel.Dock="Top"
                                              Foreground="{TemplateBinding Foreground}"
                                              FontWeight="{TemplateBinding FontWeight}"
                                              FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                              FontStyle="{TemplateBinding FontStyle}"
                                              FontStretch="{TemplateBinding FontStretch}"
                                              FontSize="{TemplateBinding FontSize}"
                                              FontFamily="{TemplateBinding FontFamily}"
                                              HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              MinWidth="0" MinHeight="0" Padding="0"
                                              VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="Stretch"
                                              Background="{TemplateBinding Background}"
                                              Style="{StaticResource HierarchicalExpanderToggleButtonStyle}"
                                              Margin="0,0,46,0"/>
                                <Button DockPanel.Dock="Right" Command="{Binding CollapseHierarchyCommand, Mode=OneTime}" ToolTip="Collapse hierarchy" HorizontalAlignment="Right" Width="23" Grid.Column="2" BorderThickness="0" Background="Transparent">
                                    <TextBlock Text="&gt;&lt;" FontSize="12">
                                        <TextBlock.LayoutTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="90"/>
                                            </TransformGroup>
                                        </TextBlock.LayoutTransform>
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform X="1"/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Button>
                                <Button Command="{Binding ExpandHierarchyCommand, Mode=OneTime}" ToolTip="Expand hierarchy" HorizontalAlignment="Right" Margin="0,0,23,0" Width="23" Grid.Column="2" BorderThickness="0" Background="Transparent">
                                    <TextBlock Text="&lt;-&gt;" FontFamily="Consolas" FontSize="10">
                                        <TextBlock.LayoutTransform>
                                            <TransformGroup>
                                                <RotateTransform Angle="90"/>
                                            </TransformGroup>
                                        </TextBlock.LayoutTransform>
                                        <TextBlock.RenderTransform>
                                            <TranslateTransform X="1"/>
                                        </TextBlock.RenderTransform>
                                    </TextBlock>
                                </Button>
                            </Grid>
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" Visibility="Collapsed"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ToolTip="{x:Null}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsSelectable, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditorItem}}}" Value="True">
                            <Setter TargetName="HeaderSite" Property="HorizontalAlignment" Value="Left"/>
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Disabled}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditorItem}}}" Value="True"/>
                                <Condition Binding="{Binding IsSelectable, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditorItem}}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource ABrush.AccentTone3.Background.Static}"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HierarchicalExpanderToggleButtonStyle_OLD" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="0">
                        <DockPanel Background="Transparent" SnapsToDevicePixels="False">
                            <!-- original:  M 1,1.5 L 4.5,5 L 8,1.5  -->
                            <!-- Pointing down:  M 1,0 L 5,4.5 L 9,0  -->
                            <!-- Pointing right: M 1,0 L 5,4 L 1,8 -->
                            <Path x:Name="arrow" Data="M 2,0 L 6,4 L 2,8"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="false"
                                  Stroke="{DynamicResource Expander.Static.Arrow.Stroke}"
                                  StrokeThickness="2" VerticalAlignment="Center"
                                  Width="10" Margin="5,1,0,0" />
                            <ContentPresenter Margin="4,0,0,0" x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            <Separator x:Name="PART_Separator" Margin="8,0,0,0" IsHitTestVisible="True" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 0,0 L 4,4.5 L 8,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.MouseOver.Arrow.Stroke}" />
                            <Setter Property="Background" TargetName="PART_Separator" Value="{DynamicResource SeparatorMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HierarchicalExpanderStyle_OLD" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch">
                        <DockPanel>
                            <Separator Margin="0,5" DockPanel.Dock="Bottom" x:Name="PART_Separator" />
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}" DockPanel.Dock="Top"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="1,1,0,1" MinWidth="0" MinHeight="0"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="Stretch"
                                          Style="{StaticResource HierarchicalExpanderToggleButtonStyle_OLD}" />
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="0,0,0,0" Visibility="Collapsed"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Disabled}" />
                        </Trigger>
                        <Trigger SourceName="HeaderSite" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_Separator" Value="{DynamicResource SeparatorMouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BoldHierarchicalExpanderStyle" TargetType="{x:Type Expander}" BasedOn="{StaticResource HierarchicalExpanderStyle}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone6.Background.Static}"/>
    </Style>

    <Style x:Key="NonBoldHierarchicalExpanderStyle" TargetType="{x:Type Expander}" BasedOn="{StaticResource HierarchicalExpanderStyle}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone4.Background.Static}"/>
    </Style>

    <!--
    <Style x:Key="OuterHierarchicalExpanderStyle" TargetType="{x:Type Expander}" BasedOn="{StaticResource HierarchicalExpanderStyle_OLD}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style x:Key="InnerHierarchicalExpanderStyle" TargetType="{x:Type Expander}" BasedOn="{StaticResource HierarchicalExpanderStyle_OLD}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
    </Style>
    -->

    <!-- fuckin visual studio -->
    <!-- d:DataContext="{d:DesignInstance {x:Type pec:BasePropertyObjectViewModel}}" -->
    <Style TargetType="{x:Type pe:PropertyEditorItem}">
        <Setter Property="Visibility" Value="{Binding IsCurrentlyApplicable, Mode=OneWay, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pe:PropertyEditorItem}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelectable" Value="True"/>
                                <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource Item.SelectedActive.Border}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource ABrush.Foreground.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--
        <Setter Property="ColumnWidth0" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}"/>
        <Setter Property="ColumnWidth1" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}"/>
        <Setter Property="ColumnWidth2" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}"/>
        -->
    </Style>

    <Style TargetType="{x:Type pe:PropertyEditorSelectionSlot}">
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditorItemsControl}}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pe:PropertyEditorSelectionSlot}">
                    <Border x:Name="Bd" BorderBrush="Transparent" BorderThickness="0" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ABrush.Tone1.Background.Static}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource ABrush.Foreground.Disabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!--
        <Setter Property="ColumnWidth0" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}"/>
        <Setter Property="ColumnWidth1" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}"/>
        <Setter Property="ColumnWidth2" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}"/>
        -->
    </Style>

    <Style TargetType="{x:Type pe:PropertyEditorItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone3.Background.Static}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <!-- Cannot use virtualization because this control can contain PropertyEditorItem and Separator -->
                    <StackPanel IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <pe:PropertyEditorItemStyleSelector x:Key="PropertyEditorItemStyleSelector"
                                        PropertyItemsControlStyle="{StaticResource {x:Type pe:PropertyEditorItemsControl}}"
                                        PropertyItemStyle="{StaticResource {x:Type pe:PropertyEditorItem}}">
        <pe:PropertyEditorItemStyleSelector.SeparatorStyle>
            <!-- d:DataContext="{d:DesignInstance {x:Type pec:PropertyObjectSeparator}}" -->
            <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource {x:Type Separator}}">
                <Setter Property="Margin" Value="0,5"/>
                <Setter Property="Visibility" Value="{Binding IsVisible, Mode=OneWay, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}"/>
            </Style>
        </pe:PropertyEditorItemStyleSelector.SeparatorStyle>
    </pe:PropertyEditorItemStyleSelector>

    <ResourceDictionary x:Key="PropertyEditorDataTemplateDictionary" Source="PropertyEditorDataTemplates.xaml"/>
    <c:BoolConverter x:Key="BoldHeaderToExpanderStyleConverter" TrueValue="{StaticResource BoldHierarchicalExpanderStyle}" FalseValue="{StaticResource NonBoldHierarchicalExpanderStyle}"/>

    <Style TargetType="{x:Type pe:PropertyEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pe:PropertyEditor}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <pe:PropertyEditorItemsControl ItemsSource="{TemplateBinding ApplicableItems}"
                                                       HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch"
                                                       BorderBrush="{TemplateBinding BorderBrush}"
                                                       BorderThickness="{TemplateBinding BorderThickness}"
                                                       ItemContainerStyleSelector="{StaticResource PropertyEditorItemStyleSelector}"
                                                       x:Name="PART_ItemsControl">
                            <ItemsControl.Resources>
                                <ResourceDictionary>
                                    <ResourceDictionary.MergedDictionaries>
                                        <StaticResource ResourceKey="PropertyEditorDataTemplateDictionary"/>
                                    </ResourceDictionary.MergedDictionaries>
                                    <DataTemplate DataType="{x:Type pec:PropertyObjectSeparator}">
                                        <Separator Visibility="{Binding IsVisible, Mode=OneWay, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}"/>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type pec:BasePropertyGroupViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding ColumnWidth0, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                                <ColumnDefinition Width="{Binding ColumnWidth1, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                                <ColumnDefinition Width="{Binding ColumnWidth2, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                            </Grid.ColumnDefinitions>
                                            <Expander Grid.ColumnSpan="3" Margin="0,0"
                                                      Visibility="{Binding IsCurrentlyApplicable, Mode=OneWay, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}"
                                                      Style="{Binding IsHeaderBold, Mode=OneWay, Converter={StaticResource BoldHeaderToExpanderStyleConverter}}"
                                                      Header="{Binding DisplayName, Mode=OneTime}" FontWeight="Bold"
                                                      IsExpanded="{Binding IsExpanded, Mode=TwoWay}"
                                                      x:Name="PART_Expander">
                                                <Expander.ToolTip>
                                                    <MultiBinding Converter="{x:Static converters:PropertyItemToolTipConverter.Instance}">
                                                        <Binding Path="DisplayName" Mode="OneWay"/>
                                                        <Binding Path="Parent" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </Expander.ToolTip>
                                                <StackPanel>
                                                    <pe:PropertyEditorItemsControl FontWeight="Normal" Margin="0,0,0,0"
                                                                                   ItemsSource="{Binding PropertyObjects, Mode=OneTime}"
                                                                                   Visibility="{Binding IsCurrentlyApplicable, Mode=OneWay, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}"
                                                                                   ItemContainerStyleSelector="{StaticResource PropertyEditorItemStyleSelector}">
                                                    </pe:PropertyEditorItemsControl>
                                                </StackPanel>
                                            </Expander>
                                        </Grid>
                                    </DataTemplate>
                                </ResourceDictionary>
                            </ItemsControl.Resources>
                        </pe:PropertyEditorItemsControl>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>