<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:editor="clr-namespace:FramePFX.PropertyEditing.Editor.Editor;assembly=FramePFX"
                    xmlns:pe="clr-namespace:FramePFX.WPF.PropertyEditing"
                    xmlns:dragger="clr-namespace:FramePFX.WPF.Controls.Dragger"
                    xmlns:attached="clr-namespace:FramePFX.WPF.Themes.Attached"
                    xmlns:primitives="clr-namespace:FramePFX.PropertyEditing.Editor.Primitives;assembly=FramePFX"
                    xmlns:pec="clr-namespace:FramePFX.PropertyEditing;assembly=FramePFX"
                    xmlns:c="clr-namespace:FramePFX.WPF.Converters"
                    xmlns:converters="clr-namespace:FramePFX.WPF.PropertyEditing.Converters"
                    xmlns:clips="clr-namespace:FramePFX.PropertyEditing.Editor.Editor.Clips;assembly=FramePFX"
                    xmlns:effects="clr-namespace:FramePFX.PropertyEditing.Editor.Editor.Effects;assembly=FramePFX"
                    xmlns:video="clr-namespace:FramePFX.Editor.ViewModels.Timelines.Effects.Video;assembly=FramePFX"
                    mc:Ignorable="d">
    <PathGeometry x:Key="ResetGeometry">F1 M 38,20.5833C 42.9908,20.5833 47.4912,22.6825 50.6667,26.046L 50.6667,17.4167L 55.4166,22.1667L 55.4167,34.8333L 42.75,34.8333L 38,30.0833L 46.8512,30.0833C 44.6768,27.6539 41.517,26.125 38,26.125C 31.9785,26.125 27.0037,30.6068 26.2296,36.4167L 20.6543,36.4167C 21.4543,27.5397 28.9148,20.5833 38,20.5833 Z M 38,49.875C 44.0215,49.875 48.9963,45.3932 49.7703,39.5833L 55.3457,39.5833C 54.5457,48.4603 47.0852,55.4167 38,55.4167C 33.0092,55.4167 28.5088,53.3175 25.3333,49.954L 25.3333,58.5833L 20.5833,53.8333L 20.5833,41.1667L 33.25,41.1667L 38,45.9167L 29.1487,45.9167C 31.3231,48.3461 34.483,49.875 38,49.875 Z</PathGeometry>
    <PathGeometry x:Key="ActiveCheckGeometry">F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z</PathGeometry>
    <s:Double x:Key="FloatMinValue">-3.402823E+38</s:Double>
    <s:Double x:Key="FloatMaxValue">3.402823E+38</s:Double>
    <SolidColorBrush x:Key="SeparatorMouseOverBrush" Color="{DynamicResource AColour.AccentTone2.Border.Static}" />

    <DataTemplate x:Key="ScaleOriginGridDataTemplate">
        <Grid Background="{DynamicResource ABrush.Tone1.Background.Static}" Width="120" Height="120"
              d:DataContext="{d:DesignInstance effects:MotionEffectDataSingleEditorViewModel}"
              DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Popup}}, Path=PlacementTarget.DataContext}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="25"/>
                <ColumnDefinition Width="5"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="5"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="25"/>
                <RowDefinition Height="5"/>
            </Grid.RowDefinitions>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="0" Grid.Column="1" Grid.Row="1" BorderThickness="0" ToolTip="Top-left corner (0.0, 0.0)">
                <Path Data="M 2,12 2,2 12,2" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="1" Grid.Column="3" Grid.Row="1" BorderThickness="0" ToolTip="Top-middle (0.5, 0.0)">
                <Path Margin="0,-3,0,0" Data="M 2,0 12,0" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="2" Grid.Column="5" Grid.Row="1" BorderThickness="0" ToolTip="Top-right corner (1.0, 0.0)">
                <Path Data="M 2,2 12,2 12,12" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="3" Grid.Column="1" Grid.Row="3" BorderThickness="0" ToolTip="Middle-left side (0.0, 0.5)">
                <Path Margin="-3,0,0,0" Data="M 0,2 0,12" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="4" Grid.Column="3" Grid.Row="3" BorderThickness="0" ToolTip="Middle (0.5, 0.5)">
                <Path Margin="-3,0,0,0" Data="M 2,2 12,2 12,12 2,12 Z" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="5" Grid.Column="5" Grid.Row="3" BorderThickness="0" ToolTip="Middle-right side (1.0, 0.5)">
                <Path Data="M 11,2 11,12" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="6" Grid.Column="1" Grid.Row="5" BorderThickness="0" ToolTip="Bottom-left corner (0, 1.0)">
                <Path Data="M 2,2 2,12 12,12" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="7" Grid.Column="3" Grid.Row="5" BorderThickness="0" ToolTip="Bottom-middle (0.5, 1.0)">
                <Path Margin="0,0,0,-3" Data="M 2,11 12,11" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
            <Button Command="{Binding SetPresetScaleOriginCommand}" CommandParameter="8" Grid.Column="5" Grid.Row="5" BorderThickness="0" ToolTip="Bottom-right (1.0, 1.0)">
                <Path Data="M 2,12 12,12 12,2" Stroke="{DynamicResource ABrush.Glyph.Static}" StrokeThickness="3" StrokeLineJoin="Round"/>
            </Button>
        </Grid>
    </DataTemplate>

    <Style x:Key="ScaleOriginGridPopupStyle" TargetType="{x:Type Popup}">
        <Setter Property="StaysOpen" Value="False"/>
        <Setter Property="Placement" Value="MousePoint"/>
    </Style>
    
    <ResourceDictionary x:Key="PropertyEditorDataTemplates">
        <!-- Clips -->
        <!-- Video Clips -->
        <!--
        <DataTemplate DataType="{x:Type clips:VideoClipDataSingleEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                </Grid.RowDefinitions>
                <TextBlock FontWeight="Normal" Padding="6,1" Grid.Row="0" VerticalAlignment="Center" Text="Opacity" Height="18" Margin="0,0,0,0" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="2" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"         EditingHint="Add to X and Y" DisplayTextOverride="Position" Height="18" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="4" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"       EditingHint="Add to X and Y" DisplayTextOverride="Scale" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="6" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScaleOrigin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditingHint="Add to X and Y" DisplayTextOverride="Origin" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <TextBlock FontWeight="Normal" Padding="6,1" Grid.Row="8" VerticalAlignment="Center" Text="Media Offset" Height="18" Margin="0,0,0,0" />
                <Grid Grid.Column="2" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding OpacityEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                        <ToggleButton IsChecked="{Binding OpacityAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding OpacityAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertOpacityKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetOpacityCommand, Mode=OneTime}" ToolTip="Reset the opacity" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaPositionEditStateChangedCommand, Mode=OneTime}"/>
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaPositionEditStateChangedCommand, Mode=OneTime}"/>
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <ToggleButton IsChecked="{Binding MediaPositionAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding MediaPositionAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertMediaPositionKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetMediaPositionCommand, Mode=OneTime}" ToolTip="Reset the media position" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <ToggleButton IsChecked="{Binding MediaScaleAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding MediaScaleAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertMediaScaleKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetMediaScaleCommand, Mode=OneTime}" ToolTip="Reset the media scale" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleOriginEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleOriginEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <ToggleButton IsChecked="{Binding MediaScaleOriginAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding MediaScaleOriginAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertMediaScaleOriginKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetMediaScaleOriginCommand, Mode=OneTime}" ToolTip="Reset the media scale origin" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="8">
                    <TextBlock Grid.Column="0" Grid.Row="0" Padding="6,2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Text="{Binding MediaFrameOffset, Mode=OneWay}" />
                </Grid>
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="1" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="3" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="5" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="7" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type clips:VideoClipDataMultipleEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock FontWeight="Normal" Padding="6,1" VerticalAlignment="Center" Text="Opacity" Height="18" Margin="0,0,0,0" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="2" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Position" Height="18" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="4" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Scale" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="6" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScaleOrigin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Origin" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <Grid Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding OpacityEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                        <Button Command="{Binding ResetOpacityCommand, Mode=OneTime}" ToolTip="Reset the opacity" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaPositionEditStateChangedCommand, Mode=OneTime}" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaPositionEditStateChangedCommand, Mode=OneTime}" />
                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding ResetMediaPositionCommand, Mode=OneTime}" ToolTip="Reset the media position" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                        <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                    </Button>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding ResetMediaScaleCommand, Mode=OneTime}" ToolTip="Reset the media scale" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                        <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                    </Button>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleOriginEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleOriginEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding ResetMediaScaleOriginCommand, Mode=OneTime}" ToolTip="Reset the media scale origin" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                        <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                    </Button>
                </Grid>
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="1" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="3" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="5" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
        -->

        <DataTemplate DataType="{x:Type clips:VideoClipDataSingleEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TextBlock FontWeight="Normal" Padding="6,1" Grid.Row="0" VerticalAlignment="Center" Text="Opacity" Height="18" Margin="0,0,0,0" />
                <TextBlock FontWeight="Normal" Padding="6,1" Grid.Row="2" VerticalAlignment="Center" Text="Media Offset" Height="18" Margin="0,0,0,0" />
                <Grid Grid.Column="2" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding OpacityEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                        <ToggleButton IsChecked="{Binding OpacityAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding OpacityAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertOpacityKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetOpacityCommand, Mode=OneTime}" ToolTip="Reset the opacity" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="2">
                    <TextBlock Grid.Column="0" Grid.Row="0" Padding="6,2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Text="{Binding MediaFrameOffset, Mode=OneWay}" />
                </Grid>
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="1" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type clips:VideoClipDataMultipleEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <TextBlock FontWeight="Normal" Padding="6,1" VerticalAlignment="Center" Text="Opacity" Height="18" Margin="0,0,0,0" />
                <Grid Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding OpacityEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                        <Button Command="{Binding ResetOpacityCommand, Mode=OneTime}" ToolTip="Reset the opacity" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- Effects -->
        <!-- Motion Effect -->
        <DataTemplate DataType="{x:Type effects:MotionEffectDataSingleEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="0" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"         EditingHint="Add to X and Y" DisplayTextOverride="Position" Height="18" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="2" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"       EditingHint="Add to X and Y" DisplayTextOverride="Scale" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="4" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScaleOrigin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditingHint="Add to X and Y" DisplayTextOverride="Origin" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <ToggleButton x:Name="OriginPopupToggle" Grid.Column="0" Grid.Row="4" VerticalAlignment="Center" HorizontalAlignment="Right" Content="[]" Width="20" Background="Transparent" BorderThickness="0"
                              ToolTip="Select a pre-defined origin location (e.g. top-left, center, middle-right, etc.)"/>
                <Popup x:Name="OriginGridPopup" Style="{StaticResource ScaleOriginGridPopupStyle}"
                       IsOpen="{Binding ElementName=OriginPopupToggle, Path=IsChecked, Mode=TwoWay}"
                       PlacementTarget="{Binding ElementName=OriginPopupToggle}">
                    <ContentControl ContentTemplate="{StaticResource ScaleOriginGridDataTemplate}"/>
                </Popup>
                <Grid Grid.Column="2" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaPositionEditStateChangedCommand, Mode=OneTime}" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaPositionEditStateChangedCommand, Mode=OneTime}" />
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <ToggleButton IsChecked="{Binding MediaPositionAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding MediaPositionAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertMediaPositionKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetMediaPositionCommand, Mode=OneTime}" ToolTip="Reset the media position" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <ToggleButton IsChecked="{Binding MediaScaleAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding MediaScaleAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertMediaScaleKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetMediaScaleCommand, Mode=OneTime}" ToolTip="Reset the media scale" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleOriginEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleOriginEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <ToggleButton IsChecked="{Binding MediaScaleOriginAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding MediaScaleOriginAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertMediaScaleOriginKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetMediaScaleOriginCommand, Mode=OneTime}" ToolTip="Reset the media scale origin" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="1" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="3" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type effects:MotionEffectDataMultiEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="0" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Position" Height="18" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="2" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Scale" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="4" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScaleOrigin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Origin" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <Grid Grid.Column="2" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaPositionEditStateChangedCommand, Mode=OneTime}"/>
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaPositionEditStateChangedCommand, Mode=OneTime}"/>
                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding ResetMediaPositionCommand, Mode=OneTime}" ToolTip="Reset the media position" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                        <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                    </Button>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding ResetMediaScaleCommand, Mode=OneTime}" ToolTip="Reset the media scale" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                        <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                    </Button>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleOriginEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStateChangedCommand="{Binding MediaScaleOriginEditStateChangedCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding ResetMediaScaleOriginCommand, Mode=OneTime}" ToolTip="Reset the media scale origin" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                        <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                    </Button>
                </Grid>
                <Border Margin="0,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="1" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="0,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="3" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>

        <!-- General Clip -->

        <DataTemplate DataType="{x:Type clips:ClipDataEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <TextBlock FontWeight="Normal" Padding="6,2" VerticalAlignment="Center" Text="Display Name" Height="18" Margin="0,0,0,0" />
                <TextBox Grid.Column="2" FontWeight="Normal" Padding="2,1" VerticalAlignment="Center" Text="{Binding DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,3" />
            </Grid>
        </DataTemplate>

        <!-- Primitive types -->
        <DataTemplate DataType="{x:Type primitives:CheckBoxEditorViewModel}">
            <StackPanel Orientation="Horizontal">
                <CheckBox Content="{Binding Label, Mode=OneWay}" IsChecked="{Binding IsChecked}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type primitives:CheckBoxGridEditorViewModel}">
            <ItemsControl ItemsSource="{Binding Editors, Mode=OneTime}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid IsItemsHost="True" Rows="1" Columns="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=Items.Count}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <StaticResource>
                        <StaticResource.ResourceKey>
                            <DataTemplateKey DataType="{x:Type primitives:CheckBoxEditorViewModel}" />
                        </StaticResource.ResourceKey>
                    </StaticResource>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Margin" Value="0,0,2,0" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </DataTemplate>
    </ResourceDictionary>

    <Style x:Key="HierarchicalExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone5.Background.Static}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0, Mode=TwoWay}" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1, Mode=TwoWay}" />
                                <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2, Mode=TwoWay}" />
                            </Grid.ColumnDefinitions>
                            <!--
                            <Border IsHitTestVisible="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1" Background="{DynamicResource ABrush.Tone8.Background.Static}" Width="1"/>
                            -->
                            <Grid Background="{TemplateBinding Background}" Grid.ColumnSpan="3" SnapsToDevicePixels="False" Margin="0,3"
                                  HorizontalAlignment="Left">
                                <Path x:Name="arrow" Data="M 2,0 L 6,4 L 2,8"
                                      HorizontalAlignment="Left"
                                      SnapsToDevicePixels="false"
                                      Stroke="{DynamicResource Expander.Static.Arrow.Stroke}"
                                      StrokeThickness="2" VerticalAlignment="Center"
                                      Width="10" Margin="5,1,0,0" />
                                <ContentPresenter Margin="19,0,0,0" x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                            <GridSplitter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Column="1" Background="Transparent" Margin="-4,0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 0,0 L 4,4.5 L 8,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.MouseOver.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HierarchicalExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch">
                        <DockPanel>
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}" DockPanel.Dock="Top"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="1,1,0,1" MinWidth="0" MinHeight="0"
                                          Padding="0"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="Stretch"
                                          Background="{TemplateBinding Background}"
                                          Style="{StaticResource HierarchicalExpanderToggleButtonStyle}" />
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" Visibility="Collapsed"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              ToolTip="{x:Null}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Disabled}" />
                        </Trigger>
                        <Trigger SourceName="HeaderSite" Property="IsMouseOver" Value="True">
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HierarchicalExpanderToggleButtonStyle_OLD" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <DockPanel Background="Transparent" SnapsToDevicePixels="False">
                            <!-- original:  M 1,1.5 L 4.5,5 L 8,1.5  -->
                            <!-- Pointing down:  M 1,0 L 5,4.5 L 9,0  -->
                            <!-- Pointing right: M 1,0 L 5,4 L 1,8 -->
                            <Path x:Name="arrow" Data="M 2,0 L 6,4 L 2,8"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="false"
                                  Stroke="{DynamicResource Expander.Static.Arrow.Stroke}"
                                  StrokeThickness="2" VerticalAlignment="Center"
                                  Width="10" Margin="5,1,0,0" />
                            <ContentPresenter Margin="4,0,0,0" x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            <Separator x:Name="PART_Separator" Margin="8,0,0,0" IsHitTestVisible="True" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 0,0 L 4,4.5 L 8,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.MouseOver.Arrow.Stroke}" />
                            <Setter Property="Background" TargetName="PART_Separator" Value="{DynamicResource SeparatorMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HierarchicalExpanderStyle_OLD" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch">
                        <DockPanel>
                            <Separator Margin="0,5" DockPanel.Dock="Bottom" x:Name="PART_Separator" />
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}" DockPanel.Dock="Top"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="1,1,0,1" MinWidth="0" MinHeight="0"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="Stretch"
                                          Style="{StaticResource HierarchicalExpanderToggleButtonStyle_OLD}" />
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="0,0,0,0" Visibility="Collapsed"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Disabled}" />
                        </Trigger>
                        <Trigger SourceName="HeaderSite" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_Separator" Value="{DynamicResource SeparatorMouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pe:PropertyEditorItem}">
        <!--
        <Setter Property="ColumnWidth0" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}"/>
        <Setter Property="ColumnWidth1" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}"/>
        <Setter Property="ColumnWidth2" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}"/>
        -->
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCurrentlyApplicable}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCurrentlyApplicable}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type pe:PropertyEditorItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}" />

    <Style TargetType="{x:Type pe:PropertyEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pe:PropertyEditor}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <pe:PropertyEditorItemsControl ItemsSource="{TemplateBinding ApplicableItems}" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <ItemsControl.Resources>
                                <ResourceDictionary>
                                    <ResourceDictionary.MergedDictionaries>
                                        <StaticResource ResourceKey="PropertyEditorDataTemplates" />
                                    </ResourceDictionary.MergedDictionaries>
                                    <DataTemplate DataType="{x:Type pec:PropertyGroupViewModel}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding ColumnWidth0, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                                <ColumnDefinition Width="{Binding ColumnWidth1, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                                <ColumnDefinition Width="{Binding ColumnWidth2, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                            </Grid.ColumnDefinitions>
                                            <Expander Grid.ColumnSpan="3" Margin="0,0" Visibility="{Binding IsCurrentlyApplicable, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}"
                                                      Style="{StaticResource HierarchicalExpanderStyle}" Background="{DynamicResource ABrush.Tone6.Background.Static}"
                                                      Header="{Binding Id, Mode=OneTime}" FontWeight="Bold"
                                                      IsExpanded="{Binding IsExpanded, Mode=TwoWay}"
                                                      x:Name="PART_Expander">
                                                <Expander.ToolTip>
                                                    <MultiBinding Converter="{x:Static converters:PropertyItemToolTipConverter.Instance}">
                                                        <Binding Path="Id" Mode="OneWay"/>
                                                        <Binding Path="Parent" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </Expander.ToolTip>
                                                <StackPanel>
                                                    <pe:PropertyEditorItemsControl FontWeight="Normal" Margin="0,0,0,0" ItemsSource="{Binding PropertyObjects, Mode=OneTime}" Visibility="{Binding IsCurrentlyApplicable, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}">
                                                        <ItemsControl.ItemContainerStyle>
                                                            <Style TargetType="{x:Type pe:PropertyEditorItem}" BasedOn="{StaticResource {x:Type pe:PropertyEditorItem}}">
                                                                <Setter Property="Margin" Value="0,0,0,0" />
                                                                <Setter Property="Visibility" Value="{Binding IsCurrentlyApplicable, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}" />
                                                            </Style>
                                                        </ItemsControl.ItemContainerStyle>
                                                        <ItemsControl.Resources>
                                                            <ResourceDictionary>
                                                                <ResourceDictionary.MergedDictionaries>
                                                                    <StaticResource ResourceKey="PropertyEditorDataTemplates" />
                                                                </ResourceDictionary.MergedDictionaries>
                                                                <DataTemplate DataType="{x:Type pec:PropertyGroupViewModel}">
                                                                    <Grid>
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="{Binding ColumnWidth0, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                                                            <ColumnDefinition Width="{Binding ColumnWidth1, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                                                            <ColumnDefinition Width="{Binding ColumnWidth2, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                                                        </Grid.ColumnDefinitions>
                                                                        <Expander Grid.ColumnSpan="3" Margin="0" Visibility="{Binding IsCurrentlyApplicable, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}"
                                                                                  Style="{StaticResource HierarchicalExpanderStyle}" Background="{DynamicResource ABrush.Tone4.Background.Static}"
                                                                                  Header="{Binding Id, Mode=OneTime}" FontWeight="Bold"
                                                                                  IsExpanded="{Binding IsExpanded, Mode=TwoWay}"
                                                                                  Padding="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditorItemsControl}}, Path=ContentPadding}"
                                                                                  x:Name="PART_Expander">
                                                                            <Expander.ToolTip>
                                                                                <MultiBinding Converter="{x:Static converters:PropertyItemToolTipConverter.Instance}">
                                                                                    <Binding Path="Id" Mode="OneWay"/>
                                                                                    <Binding Path="Parent" Mode="OneWay"/>
                                                                                </MultiBinding>
                                                                            </Expander.ToolTip>
                                                                            <StackPanel>
                                                                                <pe:PropertyEditorItemsControl FontWeight="Normal" ItemsSource="{Binding PropertyObjects, Mode=OneTime}" Visibility="{Binding IsCurrentlyApplicable, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}">
                                                                                    <ItemsControl.ItemContainerStyle>
                                                                                        <Style TargetType="{x:Type pe:PropertyEditorItem}" BasedOn="{StaticResource {x:Type pe:PropertyEditorItem}}">
                                                                                            <Setter Property="Visibility" Value="{Binding IsCurrentlyApplicable, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}" />
                                                                                        </Style>
                                                                                    </ItemsControl.ItemContainerStyle>
                                                                                </pe:PropertyEditorItemsControl>
                                                                            </StackPanel>
                                                                        </Expander>
                                                                    </Grid>
                                                                </DataTemplate>
                                                            </ResourceDictionary>
                                                        </ItemsControl.Resources>
                                                    </pe:PropertyEditorItemsControl>
                                                </StackPanel>
                                            </Expander>
                                        </Grid>
                                    </DataTemplate>
                                </ResourceDictionary>
                            </ItemsControl.Resources>
                        </pe:PropertyEditorItemsControl>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>