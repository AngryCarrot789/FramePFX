<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:p="clr-namespace:FramePFX.Editor.Properties"
                    xmlns:d="clr-namespace:FramePFX.Controls.Dragger"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:conv="clr-namespace:FramePFX.Converters"
                    xmlns:validators="clr-namespace:FramePFX.Validators"
                    xmlns:pgc="clr-namespace:FramePFX.Core.Editor.ViewModels.Timelines.Clips.Pages;assembly=FramePFX.Core"
                    xmlns:pgr="clr-namespace:FramePFX.Core.Editor.ResourceManaging.ViewModels.Pages;assembly=FramePFX.Core"
                    xmlns:a="clr-namespace:FramePFX.Themes.Attached">
    <conv:BoolToVisibilityConverter x:Key="BoolToVisibleOrCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed" UnsetValue="Collapsed" NonBoolValue="Collapsed"/>
    <PathGeometry x:Key="ResetGeometry">F1 M 38,20.5833C 42.9908,20.5833 47.4912,22.6825 50.6667,26.046L 50.6667,17.4167L 55.4166,22.1667L 55.4167,34.8333L 42.75,34.8333L 38,30.0833L 46.8512,30.0833C 44.6768,27.6539 41.517,26.125 38,26.125C 31.9785,26.125 27.0037,30.6068 26.2296,36.4167L 20.6543,36.4167C 21.4543,27.5397 28.9148,20.5833 38,20.5833 Z M 38,49.875C 44.0215,49.875 48.9963,45.3932 49.7703,39.5833L 55.3457,39.5833C 54.5457,48.4603 47.0852,55.4167 38,55.4167C 33.0092,55.4167 28.5088,53.3175 25.3333,49.954L 25.3333,58.5833L 20.5833,53.8333L 20.5833,41.1667L 33.25,41.1667L 38,45.9167L 29.1487,45.9167C 31.3231,48.3461 34.483,49.875 38,49.875 Z</PathGeometry>
    <PathGeometry x:Key="ActiveCheckGeometry">F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z</PathGeometry>
    <s:Double x:Key="FloatMinValue">-3.402823E+38</s:Double>
    <s:Double x:Key="FloatMaxValue">3.402823E+38</s:Double>

    <p:PropertyPageDataTemplateSelector x:Key="PropertyPageDataTemplateSelector">
        <p:PropertyPageDataTemplateSelector.ClipPageTemplate>
            <DataTemplate DataType="{x:Type pgc:ClipPageViewModel}">
                <Grid DataContext="{Binding Target}" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0"/>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0Splitter"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Display Name" Padding="5" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="2" Text="{Binding DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" BorderThickness="0" Padding="3,2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                </Grid>
            </DataTemplate>
        </p:PropertyPageDataTemplateSelector.ClipPageTemplate>
        <p:PropertyPageDataTemplateSelector.VideoClipPageTemplate>
            <DataTemplate DataType="{x:Type pgc:VideoClipPageViewModel}">
                <Grid DataContext="{Binding Target}" UseLayoutRounding="False" SnapsToDevicePixels="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0"/>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0Splitter"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="1"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <d:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="0" VerticalAlignment="Center" VerticalContentAlignment="Center" RoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"         DisplayTextOverride="Position" Height="18"/>
                    <d:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="2" VerticalAlignment="Center" VerticalContentAlignment="Center" RoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"       DisplayTextOverride="Scale" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05"/>
                    <d:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="4" VerticalAlignment="Center" VerticalContentAlignment="Center" RoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScaleOrigin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Origin" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05"/>
                    <TextBlock FontWeight="Normal" Padding="6,1" Grid.Row="6" VerticalAlignment="Center" Text="Opacity" Height="18" Margin="0,0,0,0"/>
                    <TextBlock FontWeight="Normal" Padding="6,1" Grid.Row="8" VerticalAlignment="Center" Text="Media Offset" Height="18" Margin="0,0,0,0"/>
                    <Grid Grid.Column="2" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <d:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" RoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <d:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" RoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <StackPanel Orientation="Horizontal" Grid.Column="2">
                            <ToggleButton IsChecked="{Binding MediaPositionAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0" Content="A"/>
                            <ToggleButton IsChecked="{Binding MediaPositionAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0" Content="O"/>
                            <Button Command="{Binding InsertMediaPositionKeyFrameCommand, Mode=OneTime}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0">
                                <Ellipse Width="8" Height="8" Fill="White"/>
                            </Button>
                            <Button Command="{Binding ResetMediaPositionCommand, Mode=OneTime}" ToolTip="Reset the media position" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                                <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="2" Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <d:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" RoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05"/>
                        <d:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" RoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05"/>
                        <StackPanel Orientation="Horizontal" Grid.Column="2">
                            <ToggleButton IsChecked="{Binding MediaScaleAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0" Content="A"/>
                            <ToggleButton IsChecked="{Binding MediaScaleAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0" Content="O"/>
                            <Button Command="{Binding InsertMediaScaleKeyFrameCommand, Mode=OneTime}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0">
                                <Ellipse Width="8" Height="8" Fill="White"/>
                            </Button>
                            <Button Command="{Binding ResetMediaScaleCommand, Mode=OneTime}" ToolTip="Reset the media scale" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                                <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="2" Grid.Row="4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <d:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" RoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05"/>
                        <d:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" RoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05"/>
                        <StackPanel Orientation="Horizontal" Grid.Column="2">
                            <ToggleButton IsChecked="{Binding MediaScaleOriginAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0" Content="A"/>
                            <ToggleButton IsChecked="{Binding MediaScaleOriginAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0" Content="O"/>
                            <Button Command="{Binding InsertMediaScaleOriginKeyFrameCommand, Mode=OneTime}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0">
                                <Ellipse Width="8" Height="8" Fill="White"/>
                            </Button>
                            <Button Command="{Binding ResetMediaScaleOriginCommand, Mode=OneTime}" ToolTip="Reset the media scale origin" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                                <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="2" Grid.Row="6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <d:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" RoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05"/>
                        <StackPanel Orientation="Horizontal" Grid.Column="1">
                            <ToggleButton IsChecked="{Binding OpacityAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0" Content="A"/>
                            <ToggleButton IsChecked="{Binding OpacityAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0" Content="O"/>
                            <Button Command="{Binding InsertOpacityKeyFrameCommand, Mode=OneTime}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" BorderThickness="0">
                                <Ellipse Width="8" Height="8" Fill="White"/>
                            </Button>
                            <Button Command="{Binding ResetOpacityCommand, Mode=OneTime}" ToolTip="Reset the opacity" Width="20" Height="20" a:CornerHelper.CornerRadius="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                                <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}"/>
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Grid Grid.Column="2" Grid.Row="8">
                        <TextBlock Grid.Column="0" Grid.Row="0" Padding="6,2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Text="{Binding MediaFrameOffset, Mode=OneWay}"/>
                    </Grid>
                    <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="1" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="3" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="5" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="7" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                </Grid>
            </DataTemplate>
        </p:PropertyPageDataTemplateSelector.VideoClipPageTemplate>
        <p:PropertyPageDataTemplateSelector.ShapeClipPageTemplate>
            <DataTemplate DataType="{x:Type pgc:ShapeClipPageViewModel}">
                <Grid DataContext="{Binding Target}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0"/>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0Splitter"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Size" FontWeight="Normal" Padding="6,1" Grid.Row="0" VerticalAlignment="Center" Margin="0,1"/>
                    <d:NumberDragger Grid.Column="2" Grid.Row="0" Padding="6,2,2,2" RoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding Width, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,2"/>
                    <d:NumberDragger Grid.Column="3" Grid.Row="0" Padding="6,2,2,2" RoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,2"/>
                </Grid>
            </DataTemplate>
        </p:PropertyPageDataTemplateSelector.ShapeClipPageTemplate>
        <p:PropertyPageDataTemplateSelector.TextClipPageTemplate>
            <DataTemplate DataType="{x:Type pgc:TextClipPageViewModel}">
                <StackPanel DataContext="{Binding Target}">
                    <CheckBox IsChecked="{Binding UseCustomText}" Content="Override Resource Text" ToolTip="By default, all clips have their own text. However, resources can store text to share across clips. Disabling this option makes this clip reference the resource's text"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Padding="5" Text="Text:" HorizontalAlignment="Left"/>
                        <d:NumberDragger Margin="2,2,0,2" Minimum="0" Maximum="4000" RoundedPlaces="1" Value="{Binding FontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="{DynamicResource ABrush.Tone4.Background.Static}" BorderBrush="{DynamicResource ABrush.Tone4.Border.Static}" BorderThickness="1"/>
                        <TextBox Margin="2,2,0,2" Width="100" VerticalContentAlignment="Center">
                            <TextBox.Text>
                                <Binding Path="FontFamily" UpdateSourceTrigger="PropertyChanged" NotifyOnValidationError="True">
                                    <Binding.ValidationRules>
                                        <validators:FontFamilyValidationRule/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <Button Content="B" Margin="2,2,0,2" HorizontalAlignment="Left" Width="22" FontWeight="Bold" FontFamily="Consolas"/>
                        <Button Content="I" Margin="2,2,0,2" HorizontalAlignment="Left" Width="22" FontStyle="Italic" FontFamily="Consolas"/>
                    </StackPanel>
                    <TextBox MinHeight="40" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" AcceptsReturn="True" AcceptsTab="True">
                    </TextBox>
                </StackPanel>
            </DataTemplate>
        </p:PropertyPageDataTemplateSelector.TextClipPageTemplate>
        <p:PropertyPageDataTemplateSelector.ImageClipPageTemplate>
            <DataTemplate DataType="{x:Type pgc:ImageClipPageViewModel}">
                <Grid DataContext="{Binding Target}">
                    <TextBlock Text="Nothing here for now..." Padding="5"/>
                </Grid>
            </DataTemplate>
        </p:PropertyPageDataTemplateSelector.ImageClipPageTemplate>
        <p:PropertyPageDataTemplateSelector.MediaClipPageTemplate>
            <DataTemplate DataType="{x:Type pgc:MediaClipPageViewModel}">
                <Grid DataContext="{Binding Target}">
                    <TextBlock Text="Nothing here for now..." Padding="5"/>
                </Grid>
            </DataTemplate>
        </p:PropertyPageDataTemplateSelector.MediaClipPageTemplate>
        <p:PropertyPageDataTemplateSelector.BaseResourcePageTemplate>
            <DataTemplate DataType="{x:Type pgr:BaseResourcePageViewModel}">
                <Grid DataContext="{Binding Target}" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0"/>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0Splitter"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Display Name" Padding="5" VerticalAlignment="Center"/>
                    <TextBox Grid.Column="2" Text="{Binding DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Padding="3,2" VerticalAlignment="Center" VerticalContentAlignment="Center"/>
                </Grid>
            </DataTemplate>
        </p:PropertyPageDataTemplateSelector.BaseResourcePageTemplate>
        <p:PropertyPageDataTemplateSelector.ResourceItemPageTemplate>
            <DataTemplate DataType="{x:Type pgr:ResourceItemPageViewModel}">
            </DataTemplate>
        </p:PropertyPageDataTemplateSelector.ResourceItemPageTemplate>
        <p:PropertyPageDataTemplateSelector.ResourceColourPageTemplate>
            <DataTemplate DataType="{x:Type pgr:ColourResourcePageViewModel}">
                <Grid DataContext="{Binding Target}" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0"/>
                        <ColumnDefinition SharedSizeGroup="PropertyPageSharedColumn0Splitter"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                        <RowDefinition Height="25"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="R" Padding="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="0"/>
                    <TextBlock Text="G" Padding="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="1"/>
                    <TextBlock Text="B" Padding="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="2"/>
                    <TextBlock Text="A" Padding="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="0" Grid.Row="3"/>
                    <d:NumberDragger Minimum="0" Maximum="255" Value="{Binding ByteR}" PreviewRoundedPlaces="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="2" Grid.Row="0"/>
                    <d:NumberDragger Minimum="0" Maximum="255" Value="{Binding ByteG}" PreviewRoundedPlaces="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="2" Grid.Row="1"/>
                    <d:NumberDragger Minimum="0" Maximum="255" Value="{Binding ByteB}" PreviewRoundedPlaces="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="2" Grid.Row="2"/>
                    <d:NumberDragger Minimum="0" Maximum="255" Value="{Binding ByteA}" PreviewRoundedPlaces="0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="2" Grid.Row="3"/>
                </Grid>
            </DataTemplate>
        </p:PropertyPageDataTemplateSelector.ResourceColourPageTemplate>
    </p:PropertyPageDataTemplateSelector>

    <ItemsPanelTemplate x:Key="WrapPanelItemsPanelTemplate">
        <WrapPanel Orientation="Horizontal"/>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="StackPanelItemsPanelTemplate">
        <VirtualizingStackPanel Orientation="Vertical" VirtualizationMode="Recycling"/>
    </ItemsPanelTemplate>

    <Style TargetType="{x:Type p:PropertyPageItem}" BasedOn="{StaticResource {x:Type HeaderedContentControl}}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone8.Border.Static}"/>
        <Setter Property="HeaderLineBrush" Value="{DynamicResource ABrush.Tone6.Background.Static}"/>
        <Setter Property="ContentTemplateSelector" Value="{StaticResource PropertyPageDataTemplateSelector}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type p:PropertyPageItem}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <DockPanel>
                            <Border x:Name="PART_HeaderBorder" MinHeight="18" DockPanel.Dock="Top">
                                <Grid Margin="5,0">
                                    <ToggleButton HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" DockPanel.Dock="Left" IsChecked="True" x:Name="PART_ToggleButton">
                                        <ToggleButton.Style>
                                            <Style TargetType="{x:Type ToggleButton}">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                            <Border Padding="{TemplateBinding Padding}">
                                                                <Grid Background="Transparent" SnapsToDevicePixels="False">
                                                                    <Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="false" Stroke="{DynamicResource Expander.Static.Arrow.Stroke}" StrokeThickness="2" VerticalAlignment="Center" />
                                                                    <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"
                                                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                                                </Grid>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="true">
                                                                    <Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5" />
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="true">
                                                                    <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.MouseOver.Arrow.Stroke}" />
                                                                </Trigger>
                                                                <Trigger Property="IsPressed" Value="true">
                                                                    <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Pressed.Arrow.Stroke}" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled" Value="false">
                                                                    <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Disabled.Arrow.Stroke}" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <DockPanel Margin="16,0,0,0">
                                        <ContentPresenter DockPanel.Dock="Left" x:Name="PART_HeaderPresenter" HorizontalAlignment="Left"
                                                          Margin="0" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Border Margin="10,0,5,0" Background="{TemplateBinding HeaderLineBrush}" Height="1" IsHitTestVisible="True"/>
                                    </DockPanel>
                                </Grid>
                            </Border>
                            <Border Visibility="{Binding ElementName=PART_ToggleButton, Path=IsChecked, Converter={StaticResource BoolToVisibleOrCollapsedConverter}}" 
                                    Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <ContentPresenter x:Name="PART_ContentPresenter" Margin="25,0,10,0"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource ABrush.Foreground.Disabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type pgc:BaseClipPropertyPageViewModel}">
                    <TextBlock Text="{Binding PageName, Mode=OneTime}" VerticalAlignment="Center" IsHitTestVisible="False"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type p:PropertyPageItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="ItemTemplateSelector" Value="{StaticResource PropertyPageDataTemplateSelector}"/>
        <Setter Property="ItemsPanel" Value="{StaticResource StackPanelItemsPanelTemplate}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type p:PropertyPageItemsControl}">
                    <Grid Grid.IsSharedSizeScope="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="150" SharedSizeGroup="PropertyPageSharedColumn0"/>
                            <ColumnDefinition Width="1"   SharedSizeGroup="PropertyPageSharedColumn0Splitter"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" SnapsToDevicePixels="true"
                                Grid.ColumnSpan="3">
                            <ScrollViewer x:Name="PART_ScrollViewer" Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            </ScrollViewer>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemDirection" Value="Horizontal">
                            <Setter Property="ItemsPanel" Value="{StaticResource WrapPanelItemsPanelTemplate}"/>
                            <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Disabled"/>
                            <Setter Property="ItemTemplateSelector" Value="{StaticResource PropertyPageDataTemplateSelector}"/>
                        </Trigger>
                        <Trigger Property="ItemDirection" Value="Vertical">
                            <Setter Property="ItemsPanel" Value="{StaticResource StackPanelItemsPanelTemplate}"/>
                            <Setter TargetName="PART_ScrollViewer" Property="HorizontalScrollBarVisibility" Value="Auto"/>
                            <Setter Property="ItemTemplateSelector" Value="{StaticResource PropertyPageDataTemplateSelector}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ListBox.Disabled.Background}" />
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{DynamicResource ListBox.Disabled.Border}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true" />
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>