<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:ap="clr-namespace:FramePFX.AttachedProperties"
                    xmlns:controls="clr-namespace:FramePFX.Editor.Timeline.Controls"
                    xmlns:c="clr-namespace:FramePFX.Controls"
                    xmlns:clips="clr-namespace:FramePFX.Core.Editor.ViewModels.Timeline.Clips;assembly=FramePFX.Core"
                    xmlns:timeline="clr-namespace:FramePFX.Editor.Timeline"
                    xmlns:tm="clr-namespace:FramePFX.Core.Editor.ViewModels.Timeline;assembly=FramePFX.Core"
                    xmlns:helpers="clr-namespace:FramePFX.Controls.Helpers"
                    xmlns:converters="clr-namespace:FramePFX.Converters"
                    xmlns:shortcuts="clr-namespace:FramePFX.Shortcuts"
                    xmlns:layers="clr-namespace:FramePFX.Core.Editor.ViewModels.Timeline.Layers;assembly=FramePFX.Core" xmlns:rulerwpf="clr-namespace:FramePFX.Controls.xclemence.RulerWPF"
                    xmlns:editor="clr-namespace:FramePFX.Editor"
                    xmlns:dragger="clr-namespace:FramePFX.Controls.Dragger"
                    xmlns:aa="clr-namespace:FramePFX.Editor.Automation"
                    xmlns:acs="clr-namespace:FramePFX.AdvancedContextService"
                    xmlns:context="clr-namespace:FramePFX.Core.Editor.Timeline.Context;assembly=FramePFX.Core"
                    mc:Ignorable="d">
    <Style TargetType="{x:Type c:CancellableThumb}" BasedOn="{StaticResource {x:Type Thumb}}"/>

    <Style TargetType="{x:Type controls:TimelinePlayHeadControl}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone7.Border.Static}"/>
        <Setter Property="MinWidth" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TimelinePlayHeadControl}">
                    <Grid Margin="-7,0,7,0" MinHeight="15">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="17"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Grid.RowSpan="2" Width="1" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="7,16,0,0" Background="{TemplateBinding Background}"/>
                        <Polygon Grid.Row="0" Points="0,0 15,0 15,10 8,17 7,17 0,10" Fill="{TemplateBinding Background}" HorizontalAlignment="Left" Width="15" />
                        <c:CancellableThumb Grid.Row="0" x:Name="PART_ThumbHead" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Cursor="SizeWE"/>
                        <c:CancellableThumb Grid.Row="1" x:Name="PART_ThumbBody" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5,0" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Cursor="SizeWE"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <converters:BoolToVisibilityConverter x:Key="BoolToVisibleOrCollapsedConverter" TrueValue="Visible" FalseValue="Collapsed" UnsetValue="Collapsed" NonBoolValue="Collapsed"/>

    <!-- d:DataContext="{d:DesignInstance tm:ClipViewModel}" -->

    <!--
        TODO: Maybe switch to using completely custom clip rendering instead of using WPF components?
        If you select no clips and hold s and just drag the playhead over a clip and create say 200 tiny 1-frame long clips,
        the UI begins lagging quite badly, even in release mode

        - Layers will still use WPF components
        - Clips can just be a coloured header with a lower background (and maybe at some point draw into that background...?)
        - Clip automation can be handled in the same location as the layer's automation based on if a clip is selected or not

        Some of the more popular software can handle 10,000s of clips with no problem at all (at least when
        it comes to zooming/scrolling. other operations may obviously cause massive lag with that many clips)
    -->

    <Style TargetType="{x:Type controls:TimelineClipControl}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone4.Background.Static}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone5.Border.Static}"/>
        <Setter Property="HeaderBrush" Value="{DynamicResource ABrush.Tone5.Background.Static}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FrameBegin" Value="{Binding FrameBegin, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="FrameDuration" Value="{Binding FrameDuration, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="MinHeight" Value="{Binding Layer.MinHeight, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="MaxHeight" Value="{Binding Layer.MaxHeight, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Height" Value="{Binding Layer.Height, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="acs:AdvancedContextMenu.ContextGenerator" Value="{x:Static context:ClipContextGenerator.Instance}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TimelineClipControl}">
                    <Grid Background="{TemplateBinding Background}" d:DataContext="{d:DesignInstance clips:VideoClipViewModel}">
                        <Border Background="{Binding Layer.LayerColour, FallbackValue=Black}" VerticalAlignment="Top" Height="20">
                            <DockPanel>
                                <TextBlock IsHitTestVisible="False" Text="{Binding DisplayName, UpdateSourceTrigger=PropertyChanged}" FontSize="11" VerticalAlignment="Center" Padding="4 1">
                                    <TextBlock.InputBindings>
                                        <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding EditDisplayNameCommand, Mode=OneTime}"/>
                                    </TextBlock.InputBindings>
                                </TextBlock>
                                <DockPanel Visibility="{TemplateBinding IsSelected, Converter={StaticResource BoolToVisibleOrCollapsedConverter}}" DataContext="{Binding AutomationData, Mode=OneTime}" HorizontalAlignment="Right" Margin="5,1,1,0">
                                    <Button DockPanel.Dock="Right" Width="20" Command="{Binding ToggleOverrideCommand, Mode=OneTime}" Content="O" ToolTip="Toggle all overrides" BorderThickness="0"/>
                                    <Button DockPanel.Dock="Right" Width="20" Command="{Binding DeselectSequenceCommand, Mode=OneTime}" Content="-" ToolTip="Deselects the currently selected parameter, hiding the sequence editor" BorderThickness="0"/>
                                    <controls:AutomationComboBox ItemsSource="{Binding Sequences, Mode=OneTime}"
                                                                 SelectedItem="{Binding ActiveSequence}"
                                                                 BorderThickness="0" Margin="0,0,0,0"
                                                                 HorizontalContentAlignment="Left"
                                                                 HorizontalAlignment="Right"
                                                                 DockPanel.Dock="Right"
                                                                 MinWidth="50" SnapsToDevicePixels="True">
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                                <Setter Property="Padding" Value="0"/>
                                                <Setter Property="Margin" Value="0"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <DockPanel HorizontalAlignment="Stretch">
                                                    <TextBlock Text="{Binding Model.Key.Id}" VerticalAlignment="Center"/>
                                                </DockPanel>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </controls:AutomationComboBox>
                                </DockPanel>
                            </DockPanel>
                        </Border>
                        <Border x:Name="OutlineBorder" BorderThickness="1" SnapsToDevicePixels="True"/>
                        <c:CancellableThumb Visibility="{TemplateBinding IsMouseOver, Converter={StaticResource BoolToVisibleOrCollapsedConverter}}" x:Name="PART_ThumbLeft" HorizontalAlignment="Left" Width="8" Margin="-4,0,0,0" Cursor="SizeWE" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"/>
                        <c:CancellableThumb Visibility="{TemplateBinding IsMouseOver, Converter={StaticResource BoolToVisibleOrCollapsedConverter}}" x:Name="PART_ThumbRight" HorizontalAlignment="Right" Width="8" Margin="0,0,-4,0" Cursor="SizeWE" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"/>
                        <aa:AutomationSequenceEditor DataContext="{Binding AutomationData}"
                                                     Sequence="{Binding ActiveSequence}"
                                                     IsOverrideEnabled="{Binding ActiveSequence.IsOverrideEnabled}"
                                                     UnitZoom="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:TimelineControl}}, Path=UnitZoom, FallbackValue=0}"
                                                     MinFrame="0"
                                                     MaxFrame="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:TimelineClipControl}}, Path=FrameDuration}"
                                                     HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="OutlineBorder" Property="BorderBrush" Value="GreenYellow"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="OutlineBorder" Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsDroppableTargetOver" Value="True">
                            <Setter TargetName="OutlineBorder" Property="BorderBrush" Value="OrangeRed"/>
                            <Setter TargetName="OutlineBorder" Property="BorderThickness" Value="3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:VideoClipControl}" BasedOn="{StaticResource {x:Type controls:TimelineClipControl}}">
    </Style>

    <Style TargetType="{x:Type controls:AudioClipControl}" BasedOn="{StaticResource {x:Type controls:TimelineClipControl}}">
    </Style>

    <timeline:TimelineClipStyleSelector x:Key="TimelineClipStyleSelector" VideoClipStyle="{StaticResource {x:Type controls:VideoClipControl}}" AudioClipStyle="{StaticResource {x:Type controls:AudioClipControl}}"/>

    <!-- d:DataContext="{d:DesignInstance tm:LayerViewModel}" -->
    <Style TargetType="{x:Type controls:TimelineLayerControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone5.Border.Static}"/>
        <Setter Property="MaxHeight" Value="{Binding MaxHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="MinHeight" Value="{Binding MinHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Height" Value="{Binding Height, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="ItemsSource" Value="{Binding Clips, Mode=OneTime}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="SelectedItem" Value="{Binding PrimarySelectedClip}"/>
        <Setter Property="helpers:SelectorHelper.SelectedItems" Value="{Binding SelectedClips}"/>
        <Setter Property="helpers:SelectorHelper.UpdateSelectedItemsOnChange" Value="True"/>
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource TimelineClipStyleSelector}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TimelineLayerControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0 0 0 1" SnapsToDevicePixels="True">
                        <!-- IsItemHost must be true in order for it's items to sync with the TimelineLayerControl's items -->
                        <Grid d:DataContext="{d:DesignInstance tm:LayerViewModel}">
                            <Canvas IsItemsHost="True" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                            <aa:AutomationSequenceEditor DataContext="{Binding AutomationData}"
                                                         Sequence="{Binding ActiveSequence}"
                                                         IsOverrideEnabled="{Binding ActiveSequence.IsOverrideEnabled}"
                                                         UnitZoom="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:TimelineControl}}, Path=UnitZoom, FallbackValue=1}"
                                                         MaxFrame="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:TimelineControl}}, Path=MaxDuration, FallbackValue=10000}"
                                                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:VideoLayerControl}" BasedOn="{StaticResource {x:Type controls:TimelineLayerControl}}">
    </Style>

    <Style TargetType="{x:Type controls:AudioLayerControl}" BasedOn="{StaticResource {x:Type controls:TimelineLayerControl}}">
    </Style>

    <timeline:TimelineLayerStyleSelector x:Key="TimelineLayerStyleSelector" VideoLayerStyle="{StaticResource {x:Type controls:VideoLayerControl}}" AudioLayerStyle="{StaticResource {x:Type controls:AudioLayerControl}}"/>

    <Style x:Key="TimelineHorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}" BasedOn="{StaticResource {x:Type ScrollBar}}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Background" Value="{DynamicResource ScrollBar.Static.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource ScrollBar.Static.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1,0" />
        <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1" />
                        <RepeatButton x:Name="PART_LineUpButton" Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowTop" Data="M 0,4 C0,4 0,6 0,6 0,6 3.5,2.5 3.5,2.5 3.5,2.5 7,6 7,6 7,6 7,4 7,4 7,4 3.5,0.5 3.5,0.5 3.5,0.5 0,4 0,4 z" Fill="{DynamicResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource ScrollBarThumbVertical}" />
                            </Track.Thumb>
                        </Track>
                        <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                            <Path x:Name="ArrowBottom" Data="M 0,2.5 C0,2.5 0,0.5 0,0.5 0,0.5 3.5,4 3.5,4 3.5,4 7,0.5 7,0.5 7,0.5 7,2.5 7,2.5 7,2.5 3.5,6 3.5,6 3.5,6 0,2.5 0,2.5 z" Fill="{DynamicResource ScrollBar.Static.Glyph}" Margin="3,4,3,3" Stretch="Uniform" />
                        </RepeatButton>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom" Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop" Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowBottom" Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true" />
                                <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Fill" TargetName="ArrowTop" Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Fill" TargetName="ArrowTop" Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                            <Setter Property="Fill" TargetName="ArrowBottom" Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <DockPanel SnapsToDevicePixels="true">
                                <Border Background="{TemplateBinding Background}" DockPanel.Dock="Right" Width="50" Panel.ZIndex="1">
                                    <Grid>
                                        <dragger:NumberDragger IsEnabled="True" 
                                                               Background="{TemplateBinding Background}" BorderThickness="0" 
                                                               Style="{StaticResource AbletonNumberDraggerStyle}"
                                                               ToolTip="The timeline zoom level (read only; use CTRL + MouseWheel to zoom)"
                                                               Minimum="0.001" Maximum="200"
                                                               Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type controls:TimelineControl}}, Path=UnitZoom, Mode=OneWay}"/>
                                    </Grid>
                                </Border>
                                <Grid x:Name="Bg" Margin="0,0,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                        <ColumnDefinition Width="0.00001*" />
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" />
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowLeft" Data="M 3.18,7 C3.18,7 5,7 5,7 5,7 1.81,3.5 1.81,3.5 1.81,3.5 5,0 5,0 5,0 3.18,0 3.18,0 3.18,0 0,3.5 0,3.5 0,3.5 3.18,7 3.18,7 z" Fill="{DynamicResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}" />
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}" />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource ScrollBarButton}">
                                        <Path x:Name="ArrowRight" Data="M 1.81,7 C1.81,7 0,7 0,7 0,7 3.18,3.5 3.18,3.5 3.18,3.5 0,0 0,0 0,0 1.81,0 1.81,0 1.81,0 5,3.5 5,3.5 5,3.5 1.81,7 1.81,7 z" Fill="{DynamicResource ScrollBar.Static.Glyph}" Margin="3" Stretch="Uniform" />
                                    </RepeatButton>
                                </Grid>
                            </DockPanel>
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight" Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft" Value="{DynamicResource ScrollBar.Pressed.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowRight" Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true" />
                                        <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Fill" TargetName="ArrowLeft" Value="{DynamicResource ScrollBar.MouseOver.Glyph}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="ArrowLeft" Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                                    <Setter Property="Fill" TargetName="ArrowRight" Value="{DynamicResource ScrollBar.Disabled.Glyph}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="TimelineScrollViewerStyle" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Type ScrollViewer}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1" />
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Grid.RowSpan="2" />
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Style="{StaticResource TimelineHorizontalScrollBarStyle}" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Grid.ColumnSpan="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type controls:TimelineControl}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone2.Background.Static}"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="shortcuts:UIFocusGroup.FocusGroupPath" Value="Application/Editor/Timeline/Surface" />
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource TimelineLayerStyleSelector}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TimelineControl}">
                    <Grid x:Name="PART_rootGrid">
                        <Border Background="{DynamicResource ABrush.Tone1.Background.Static}"/>
                        <!-- A collection of TimelineLayerControls -->
                        <ScrollViewer x:Name="PART_ScrollViewer" Focusable="false"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalScrollBarVisibility="Visible"
                                      CanContentScroll="False"
                                      converters:VerticalScrollBinder.BindGroup="TimelineScrollGroup"
                                      Style="{StaticResource TimelineScrollViewerStyle}">
                            <!-- Handle RequestBringIntoView in the grid because there is no preview version of the event -->
                            <!-- Handling the event will stop the ScrollViewer scrolling to offscreen values -->
                            <Grid HorizontalAlignment="Left" ap:HandleRequestBringIntoView.IsEnabled="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Margin="0" Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Grid.Row="1">
                                    <ItemsPresenter x:Name="PART_ItemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <Border x:Name="PART_TimestampBoard"
                                        Background="{DynamicResource ABrush.Tone3.Background.Static}"
                                        BorderBrush="{DynamicResource ABrush.Tone4.Border.Static}"
                                        BorderThickness="0 0 0 1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <rulerwpf:Ruler VerticalAlignment="Stretch"
                                                    HorizontalAlignment="Stretch"
                                                    MarkerControlReference="{Binding ElementName=PART_rootGrid}"
                                                    MaxValue="{Binding MaxDuration}"/>
                                    <!--
                                    <c:Ruler VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                    -->
                                </Border>
                                <controls:TimelinePlayHeadControl Background="{DynamicResource ABrush.Tone7.Border.Static}"
                                                                  x:Name="PART_PlayHead" Width="1"
                                                                  Grid.Row="0" Grid.RowSpan="2"
                                                                  Margin="0" VerticalAlignment="Stretch"                                                                      VerticalContentAlignment="Stretch"
                                                                  HorizontalAlignment="Left"
                                                                  Timeline="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                                  FrameIndex="{Binding PlayHeadFrame, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <timeline:TimelineLayerListItemTemplateSelector x:Key="TimelineLayerListItemContainerSelector">
        <timeline:TimelineLayerListItemTemplateSelector.VideoLayerTemplate>
            <DataTemplate DataType="{x:Type layers:VideoLayerViewModel}">
                <Grid Margin="4,0">
                    <DockPanel SnapsToDevicePixels="True">
                        <DockPanel DockPanel.Dock="Top" Height="17">
                            <TextBlock Text="{Binding DisplayName}" FontWeight="DemiBold" TextTrimming="CharacterEllipsis" DockPanel.Dock="Right"/>
                            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" DockPanel.Dock="Left" Orientation="Horizontal" Margin="0,0,3,0">
                                <ToggleButton Content="V" ToolTip="Toggle visibility" Width="17" IsChecked="{Binding IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" BorderThickness="0"/>
                            </StackPanel>
                        </DockPanel>
                        <Grid Background="Transparent" Margin="0,2,0,0">
                            <dragger:NumberDragger Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay}"
                                             TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05"
                                             Style="{StaticResource AbletonNumberDraggerStyle}" BorderThickness="0"
                                             HorizontalAlignment="Left" VerticalAlignment="Top" Width="50" SnapsToDevicePixels="True" Height="17"
                                             ap:HistoryHelper.DragId="{x:Static layers:VideoLayerViewModel.OpacityHistoryKey}"/>
                            <DockPanel DataContext="{Binding AutomationData, Mode=OneTime}" Margin="55,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="17">
                                <Button Background="{DynamicResource ABrush.AccentTone2.Background.Static}" DockPanel.Dock="Right" Width="18"
                                        Command="{Binding ToggleOverrideCommand, Mode=OneTime}" Content="O" ToolTip="Disables the current override, or all overrides"
                                        BorderThickness="0"/>
                                <Border Width="3"/>
                                <Button DockPanel.Dock="Right" Width="18" Command="{Binding DeselectSequenceCommand, Mode=OneTime}" Content="-"
                                        ToolTip="Deselects the currently selected parameter, hiding the sequence editor" BorderThickness="0"/>
                                <controls:AutomationComboBox ItemsSource="{Binding Sequences, Mode=OneTime}" HorizontalContentAlignment="Left"
                                                             SelectedItem="{Binding ActiveSequence}" BorderThickness="0"
                                                             DockPanel.Dock="Right" SnapsToDevicePixels="True"/>
                            </DockPanel>
                        </Grid>
                    </DockPanel>
                </Grid>
            </DataTemplate>
        </timeline:TimelineLayerListItemTemplateSelector.VideoLayerTemplate>
        <timeline:TimelineLayerListItemTemplateSelector.AudioLayerTemplate>
            <DataTemplate DataType="{x:Type layers:AudioLayerViewModel}">
                <Grid Margin="4,0">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top" Height="20">
                            <TextBlock Text="{Binding DisplayName}" FontWeight="DemiBold" TextTrimming="CharacterEllipsis" DockPanel.Dock="Right"/>
                            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" DockPanel.Dock="Left" Orientation="Horizontal" Margin="0,0,3,0">
                                <ToggleButton Content="M" ToolTip="Toggle muted state" Width="20" IsChecked="{Binding IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </DockPanel>
                        <Grid Background="Transparent" Margin="0,2,0,0">
                            <dragger:NumberDragger Minimum="0" Maximum="1" Value="{Binding Volume, Mode=TwoWay}"
                                             TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05"
                                             Style="{StaticResource AbletonNumberDraggerStyle}"
                                             HorizontalAlignment="Right" VerticalAlignment="Top" Width="50" SnapsToDevicePixels="True" Height="17"/>
                        </Grid>
                    </DockPanel>
                </Grid>
            </DataTemplate>
        </timeline:TimelineLayerListItemTemplateSelector.AudioLayerTemplate>
    </timeline:TimelineLayerListItemTemplateSelector>

    <Style TargetType="{x:Type controls:AutomationComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="{Binding Model.Key.Id}" VerticalAlignment="Center"/>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>