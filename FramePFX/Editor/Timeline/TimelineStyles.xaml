<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:ap="clr-namespace:FramePFX.AttachedProperties"
                    xmlns:controls="clr-namespace:FramePFX.Editor.Timeline.Controls"
                    xmlns:c="clr-namespace:FramePFX.Controls"
                    xmlns:clips="clr-namespace:FramePFX.Core.Editor.ViewModels.Timeline.Clips;assembly=FramePFX.Core"
                    xmlns:timeline="clr-namespace:FramePFX.Editor.Timeline"
                    xmlns:tm="clr-namespace:FramePFX.Core.Editor.ViewModels.Timeline;assembly=FramePFX.Core"
                    xmlns:helpers="clr-namespace:FramePFX.Controls.Helpers"
                    xmlns:converters="clr-namespace:FramePFX.Converters"
                    xmlns:shortcuts="clr-namespace:FramePFX.Shortcuts"
                    xmlns:layers="clr-namespace:FramePFX.Core.Editor.ViewModels.Timeline.Layers;assembly=FramePFX.Core" xmlns:rulerwpf="clr-namespace:FramePFX.Controls.xclemence.RulerWPF"
                    mc:Ignorable="d">
    <Style TargetType="{x:Type c:CancellableThumb}" BasedOn="{StaticResource {x:Type Thumb}}"/>

    <Style TargetType="{x:Type controls:TimelinePlayHeadControl}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Foreground.Static}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone7.Border.Static}"/>
        <Setter Property="MinWidth" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TimelinePlayHeadControl}">
                    <Grid Margin="-7,0,7,0" MinHeight="15">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="17"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Grid.RowSpan="2" Width="1" VerticalAlignment="Stretch" HorizontalAlignment="Left" Margin="7,16,0,0" Background="{TemplateBinding Background}"/>
                        <Polygon Grid.Row="0" Points="0,0 15,0 15,10 8,17 7,17 0,10" Fill="{TemplateBinding Background}" HorizontalAlignment="Left" Width="15" />
                        <c:CancellableThumb Grid.Row="0" x:Name="PART_ThumbHead" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Cursor="SizeWE"/>
                        <c:CancellableThumb Grid.Row="1" x:Name="PART_ThumbBody" Width="5" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5,0" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Cursor="SizeWE"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- d:DataContext="{d:DesignInstance tm:ClipViewModel}" -->
    <Style TargetType="{x:Type controls:TimelineClipControl}" BasedOn="{StaticResource {x:Type HeaderedContentControl}}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone4.Background.Static}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone5.Border.Static}"/>
        <Setter Property="HeaderBrush" Value="{DynamicResource ABrush.Tone5.Background.Static}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FrameBegin" Value="{Binding FrameBegin, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="FrameDuration" Value="{Binding FrameDuration, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="MinHeight" Value="{Binding Layer.MinHeight, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="MaxHeight" Value="{Binding Layer.MaxHeight, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Height" Value="{Binding Layer.Height, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:VideoClipControl}">
                    <Grid d:DataContext="{d:DesignInstance clips:VideoClipViewModel}">
                        <Grid x:Name="FullElementContent" SnapsToDevicePixels="True">
                            <Border Background="{Binding Layer.LayerColour, FallbackValue=Black}" VerticalAlignment="Top" Height="20">
                                <ContentPresenter ContentSource="Header"/>
                            </Border>
                            <Grid Margin="1,20,1,0" Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </Grid>
                        <Border x:Name="OutlineBorder" BorderThickness="1" SnapsToDevicePixels="True"/>
                        <c:CancellableThumb x:Name="PART_ThumbLeft" HorizontalAlignment="Left" Width="8" Margin="-4,0,0,0" Cursor="SizeWE" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"/>
                        <c:CancellableThumb x:Name="PART_ThumbRight" HorizontalAlignment="Right" Width="8" Margin="0,0,-4,0" Cursor="SizeWE" Background="Transparent" BorderBrush="Transparent" BorderThickness="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="OutlineBorder" Property="BorderBrush" Value="GreenYellow"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="OutlineBorder" Property="BorderBrush" Value="{Binding BorderBrush, RelativeSource={RelativeSource Mode=TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsDroppableTargetOver" Value="True">
                            <Setter TargetName="OutlineBorder" Property="BorderBrush" Value="OrangeRed"/>
                            <Setter TargetName="OutlineBorder" Property="BorderThickness" Value="3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel>
                        <TextBlock Text="{Binding DisplayName, UpdateSourceTrigger=PropertyChanged}" FontSize="11" VerticalAlignment="Center" Padding="4 1">
                            <TextBlock.InputBindings>
                                <MouseBinding MouseAction="LeftDoubleClick" Command="{Binding EditDisplayNameCommand, Mode=OneTime}"/>
                            </TextBlock.InputBindings>
                        </TextBlock>
                        <DockPanel HorizontalAlignment="Right" Margin="5,0,0,0" d:DataContext="{d:DesignInstance tm:ClipViewModel}">
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                                <!-- button bar here; left to right i think?
                                <ToggleButton Content="V" Width="20"/>
                                -->
                            </StackPanel>
                            <DockPanel DataContext="{Binding AutomationData, Mode=OneTime}" Margin="0,1,1,0">
                                <Button DockPanel.Dock="Right" Width="20" Command="{Binding ToggleAllOverridesCommand, Mode=OneTime}" Content="O" ToolTip="Toggle all overrides" BorderThickness="0"/>
                                <Button DockPanel.Dock="Right" Width="20" Command="{Binding DeselectSequenceCommand, Mode=OneTime}" Content="-" ToolTip="Deselects the currently selected parameter, hiding the sequence editor" BorderThickness="0"/>
                                <controls:AutomationComboBox ItemsSource="{Binding Sequences, Mode=OneTime}" 
                                                             SelectedItem="{Binding SelectedSequence}" 
                                                             BorderThickness="0" Margin="0,0,0,0"
                                                             HorizontalContentAlignment="Left"
                                                             HorizontalAlignment="Right"
                                                             DockPanel.Dock="Right"
                                                             MinWidth="50" SnapsToDevicePixels="True">
                                    <ComboBox.ItemContainerStyle>
                                        <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                                            <Setter Property="Padding" Value="0"/>
                                            <Setter Property="Margin" Value="0"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        </Style>
                                    </ComboBox.ItemContainerStyle>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel HorizontalAlignment="Stretch">
                                                <TextBlock Text="{Binding Model.Key.Id}" VerticalAlignment="Center"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </controls:AutomationComboBox>
                            </DockPanel>
                        </DockPanel>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:VideoClipControl}" BasedOn="{StaticResource {x:Type controls:TimelineClipControl}}">
    </Style>

    <Style TargetType="{x:Type controls:AudioClipControl}" BasedOn="{StaticResource {x:Type controls:TimelineClipControl}}">
    </Style>

    <timeline:TimelineClipStyleSelector x:Key="TimelineClipStyleSelector" VideoClipStyle="{StaticResource {x:Type controls:VideoClipControl}}" AudioClipStyle="{StaticResource {x:Type controls:AudioClipControl}}"/>

    <!-- d:DataContext="{d:DesignInstance tm:LayerViewModel}" -->
    <Style TargetType="{x:Type controls:TimelineLayerControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ABrush.Tone5.Border.Static}"/>
        <Setter Property="MaxHeight" Value="{Binding MaxHeight, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="MinHeight" Value="{Binding MinHeight, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Height" Value="{Binding Height, UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="ItemsSource" Value="{Binding Clips, Mode=OneTime}"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="SelectedItem" Value="{Binding PrimarySelectedClip}"/>
        <Setter Property="helpers:SelectorHelper.SelectedItems" Value="{Binding SelectedClips}"/>
        <Setter Property="helpers:SelectorHelper.UpdateSelectedItemsOnChange" Value="True"/>
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource TimelineClipStyleSelector}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TimelineLayerControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0 0 0 1" SnapsToDevicePixels="True">
                        <!-- IsItemHost must be true in order for it's items to sync with the TimelineLayerControl's items -->
                        <Canvas IsItemsHost="True" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type controls:VideoLayerControl}" BasedOn="{StaticResource {x:Type controls:TimelineLayerControl}}">
    </Style>

    <Style TargetType="{x:Type controls:AudioLayerControl}" BasedOn="{StaticResource {x:Type controls:TimelineLayerControl}}">
    </Style>

    <timeline:TimelineLayerStyleSelector x:Key="TimelineLayerStyleSelector" VideoLayerStyle="{StaticResource {x:Type controls:VideoLayerControl}}" AudioLayerStyle="{StaticResource {x:Type controls:AudioLayerControl}}"/>

    <Style TargetType="{x:Type controls:TimelineControl}">
        <Setter Property="Background" Value="{DynamicResource ABrush.Tone2.Background.Static}"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="shortcuts:UIFocusGroup.FocusGroupPath" Value="Application/Editor/Timeline/Surface" />
        <Setter Property="ItemContainerStyleSelector" Value="{StaticResource TimelineLayerStyleSelector}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:TimelineControl}">
                    <Grid x:Name="PART_rootGrid">
                        <Border Background="{DynamicResource ABrush.Tone1.Background.Static}"/>
                        <!-- A collection of TimelineLayerControls -->
                        <ScrollViewer x:Name="PART_ScrollViewer" Focusable="false"
                                      Padding="{TemplateBinding Padding}"
                                      HorizontalScrollBarVisibility="Visible"
                                      CanContentScroll="False"
                                      converters:VerticalScrollBinder.BindGroup="TimelineScrollGroup">
                            <!-- Handle RequestBringIntoView in the grid because there is no preview version of the event -->
                            <!-- Handling the event will stop the ScrollViewer scrolling to offscreen values -->
                            <Grid HorizontalAlignment="Left" ap:HandleRequestBringIntoView.IsEnabled="True">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Margin="0" Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Grid.Row="1">
                                    <ItemsPresenter x:Name="PART_ItemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <Border Grid.Row="0" x:Name="PART_TimestampBoard"
                                        Margin="0" VerticalAlignment="Stretch"
                                        Background="{DynamicResource ABrush.Tone3.Background.Static}"
                                        BorderBrush="{DynamicResource ABrush.Tone4.Border.Static}"
                                        BorderThickness="0 0 0 1">
                                    <rulerwpf:Ruler VerticalAlignment="Stretch"
                                                    HorizontalAlignment="Stretch"
                                                    MarkerControlReference="{Binding ElementName=PART_rootGrid}"
                                                    MaxValue="{Binding MaxDuration}"/>
                                    <!--
                                    <c:Ruler VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                                    -->
                                </Border>
                                <controls:TimelinePlayHeadControl Background="{DynamicResource ABrush.Tone7.Border.Static}"
                                                                  x:Name="PART_PlayHead" Grid.Row="0" Grid.RowSpan="2" Width="1"
                                                                  VerticalAlignment="Stretch"
                                                                  VerticalContentAlignment="Stretch"
                                                                  HorizontalAlignment="Left"
                                                                  Timeline="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                                  FrameIndex="{Binding PlayHeadFrame, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </Grid>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <timeline:TimelineLayerListItemTemplateSelector x:Key="TimelineLayerListItemContainerSelector">
        <timeline:TimelineLayerListItemTemplateSelector.VideoLayerTemplate>
            <DataTemplate DataType="{x:Type layers:VideoLayerViewModel}">
                <Grid Margin="4,0">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top" Height="20">
                            <TextBlock Text="{Binding DisplayName}" FontWeight="DemiBold" TextTrimming="CharacterEllipsis" DockPanel.Dock="Right"/>
                            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" DockPanel.Dock="Left" Orientation="Horizontal" Margin="0,0,3,0">
                                <ToggleButton Content="V" ToolTip="Toggle visibility" Width="20" IsChecked="{Binding IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </DockPanel>
                        <Grid Background="Transparent" Margin="0,2,0,0">
                            <c:NumberDragger Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay}"
                                             TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05"
                                             Style="{StaticResource AbletonNumberDraggerStyle}"
                                             HorizontalAlignment="Left" VerticalAlignment="Top" Width="50" SnapsToDevicePixels="True" Height="17"/>

                            <DockPanel DataContext="{Binding AutomationData, Mode=OneTime}" Margin="55,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Height="17">
                                <Button DockPanel.Dock="Right" Width="18" Command="{Binding ToggleAllOverridesCommand, Mode=OneTime}" Content="O" ToolTip="Toggle all overrides" BorderThickness="0"/>
                                <Button DockPanel.Dock="Right" Width="18" Command="{Binding DeselectSequenceCommand, Mode=OneTime}" Content="-" ToolTip="Deselects the currently selected parameter, hiding the sequence editor" BorderThickness="0"/>
                                <controls:AutomationComboBox ItemsSource="{Binding Sequences, Mode=OneTime}"
                                                             SelectedItem="{Binding SelectedSequence}"
                                                             BorderThickness="0"
                                                             HorizontalContentAlignment="Left"
                                                             DockPanel.Dock="Right" SnapsToDevicePixels="True"/>
                            </DockPanel>
                        </Grid>
                    </DockPanel>
                </Grid>
            </DataTemplate>
        </timeline:TimelineLayerListItemTemplateSelector.VideoLayerTemplate>
        <timeline:TimelineLayerListItemTemplateSelector.AudioLayerTemplate>
            <DataTemplate DataType="{x:Type layers:AudioLayerViewModel}">
                <Grid Margin="4,0">
                    <DockPanel>
                        <DockPanel DockPanel.Dock="Top" Height="20">
                            <TextBlock Text="{Binding DisplayName}" FontWeight="DemiBold" TextTrimming="CharacterEllipsis" DockPanel.Dock="Right"/>
                            <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" DockPanel.Dock="Left" Orientation="Horizontal" Margin="0,0,3,0">
                                <ToggleButton Content="M" ToolTip="Toggle muted state" Width="20" IsChecked="{Binding IsMuted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </DockPanel>
                        <Grid Background="Transparent" Margin="0,2,0,0">
                            <c:NumberDragger Minimum="0" Maximum="1" Value="{Binding Volume, Mode=TwoWay}"
                                             TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05"
                                             Style="{StaticResource AbletonNumberDraggerStyle}"
                                             HorizontalAlignment="Right" VerticalAlignment="Top" Width="50" SnapsToDevicePixels="True" Height="17"/>
                        </Grid>
                    </DockPanel>
                </Grid>
            </DataTemplate>
        </timeline:TimelineLayerListItemTemplateSelector.AudioLayerTemplate>
    </timeline:TimelineLayerListItemTemplateSelector>

    <Style TargetType="{x:Type controls:AutomationComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource {x:Type ComboBoxItem}}">
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Margin" Value="0"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <DockPanel HorizontalAlignment="Stretch">
                        <TextBlock Text="{Binding Model.Key.Id}" VerticalAlignment="Center"/>
                    </DockPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>