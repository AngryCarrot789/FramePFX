<views:BaseDialog x:Class="FrameControlEx.Views.Message.MessageWindow"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                  xmlns:message="clr-namespace:FrameControlEx.Core.Views.Dialogs.Message;assembly=FrameControlEx.Core"
                  xmlns:message1="clr-namespace:FrameControlEx.Core.Views.Dialogs.Modal;assembly=FrameControlEx.Core"
                  xmlns:views="clr-namespace:FrameControlEx.Views"
                  xmlns:converters="clr-namespace:FrameControlEx.Converters"
                  xmlns:message2="clr-namespace:FrameControlEx.Views.Message"
                  xmlns:attached="clr-namespace:FrameControlEx.Themes.Attached"
                  mc:Ignorable="d"
                  d:DataContext="{d:DesignInstance message:MessageDialog}"
                  Title="{Binding Titlebar, Mode=OneWay}"
                  MinWidth="250" MinHeight="120"
                  Width="400" Height="175"
                  WindowStyle="ToolWindow"
                  ResizeMode="CanResize"
                  Style="{DynamicResource CustomWindowStyleEx}">
    <Window.Resources>
        <converters:EmptyStringToVisibilityConverter x:Key="StringToVisibility"/>
        <!-- <converters:BoolToVisibilityConverter x:Key="BoolToVisConverter" TrueValue="Visible" FalseValue="Visible"/>-->
        <!-- ShowUseNextResultForCurrentQueueOptionToVisibilityConverter -->
        <converters:BoolConverterAND x:Key="BoolAND"/>
        <!-- <message2:CurrentQueueCheckBoxConverter x:Key="NotSureWhatToNameThis"/> -->
    </Window.Resources>
    <DockPanel x:Name="WindowContentRoot">
        <Border DockPanel.Dock="Bottom" VerticalAlignment="Bottom" x:Name="ButtonBarBorder" Padding="10,0" Background="{DynamicResource AREghZyBrush.Tone4.Background.Static}">
            <DockPanel>
                <ItemsControl DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,10,0" Padding="0,5">
                    <CheckBox IsEnabled="{Binding ShowAlwaysUseNextResultOption, Mode=OneWay}" IsChecked="{Binding IsAlwaysUseThisOptionChecked, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,2">
                        <TextBlock TextWrapping="Wrap" Text="Always use this option" TextAlignment="Center"/>
                    </CheckBox>
                    <!--
                    <CheckBox.Visibility>
                        <MultiBinding Converter="{StaticResource NotSureWhatToNameThis}">
                            <Binding Path="ShowAlwaysUseNextResultOption"/>
                            <Binding Path="IsAlwaysUseNextResultChecked"/>
                            <Binding Path="CanShowAlwaysUseNextResultForCurrentQueueOption"/>
                        </MultiBinding>
                    </CheckBox.Visibility>
                    -->
                    <CheckBox Content="Current queue only" IsChecked="{Binding IsAlwaysUseThisOptionForCurrentQueueChecked, UpdateSourceTrigger=PropertyChanged}" Margin="0,2,0,0">
                        <CheckBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource BoolAND}">
                                <Binding Path="ShowAlwaysUseNextResultOption"/>
                                <Binding Path="IsAlwaysUseThisOptionChecked"/>
                                <Binding Path="CanShowAlwaysUseNextResultForCurrentQueueOption" Mode="OneWay"/>
                            </MultiBinding>
                        </CheckBox.IsEnabled>
                    </CheckBox>
                </ItemsControl>
                <ItemsControl DockPanel.Dock="Right" ItemsSource="{Binding Buttons, Mode=OneTime}" 
                              VerticalAlignment="Center" HorizontalAlignment="Right" 
                              VerticalContentAlignment="Stretch" 
                              Height="23" Margin="0,10"
                              x:Name="ButtonBarList">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.Resources>
                        <DataTemplate DataType="{x:Type message1:DialogButton}">
                            <Button Content="{Binding Text, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                    Command="{Binding Command, Mode=OneTime}"
                                    ToolTip="{Binding ToolTip, Mode=OneWay}"
                                    HorizontalAlignment="Center" VerticalAlignment="Stretch"
                                    Padding="10,0" MinWidth="75" Margin="0,0,5,0"
                                    SnapsToDevicePixels="True"
                                    attached:CornerHelper.CornerRadius="2"
                                    Background="{DynamicResource AREghZyBrush.Tone6.Background.Static}"
                                    BorderBrush="{DynamicResource AREghZyBrush.Tone6.Border.Static}"
                                    Focusable="True"/>
                        </DataTemplate>
                    </ItemsControl.Resources>
                </ItemsControl>
            </DockPanel>
        </Border>
        <ScrollViewer DockPanel.Dock="Top" Margin="0,0,0,0"
                      VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto"
                      BorderThickness="0,1" BorderBrush="{DynamicResource AREghZyBrush.Tone5.Border.Static}">
            <ScrollViewer.Style>
                <Style TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Type ScrollViewer}}">
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="Grid">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Rectangle x:Name="Corner" Grid.Column="1" Fill="Transparent" Grid.Row="1" />
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Grid.RowSpan="2" />
                                        <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" />
                                    </Grid>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <DataTrigger Binding="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}" Value="{x:Static Visibility.Visible}">
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}" Value="{x:Static Visibility.Visible}">
                                        <Setter Property="BorderThickness" Value="1"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ComputedVerticalScrollBarVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}" Value="{x:Static Visibility.Collapsed}">
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ComputedHorizontalScrollBarVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ScrollViewer}}}" Value="{x:Static Visibility.Collapsed}">
                                        <Setter Property="BorderThickness" Value="0"/>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ScrollViewer.Style>
            <ItemsControl Padding="8,10">
                <TextBlock Text="{Binding Header}" Visibility="{Binding Header, Converter={StaticResource StringToVisibility}, Mode=OneWay}" VerticalAlignment="Top" Padding="0,0,0,5" FontWeight="Bold" FontSize="20" Foreground="{DynamicResource AREghZyBrush.ColourfulGlyph.Static}"/>
                <TextBox Text="{Binding Message, Mode=OneWay}"
                         Background="Transparent" BorderBrush="Transparent"
                         BorderThickness="0"
                         IsReadOnly="True" IsReadOnlyCaretVisible="True"
                         TextWrapping="Wrap" VerticalAlignment="Top" Padding="0"/>
            </ItemsControl>
        </ScrollViewer>
    </DockPanel>
</views:BaseDialog>
