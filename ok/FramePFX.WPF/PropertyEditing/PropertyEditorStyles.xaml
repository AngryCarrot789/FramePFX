<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pec="clr-namespace:FramePFX.PropertyEditing;assembly=FramePFX"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:primitives="clr-namespace:FramePFX.PropertyEditing.Editors.Primitives;assembly=FramePFX"
                    xmlns:editor="clr-namespace:FramePFX.PropertyEditing.Editors.Editor;assembly=FramePFX"
                    xmlns:pe="clr-namespace:FramePFX.WPF.PropertyEditing"
                    xmlns:dragger="clr-namespace:FramePFX.WPF.Controls.Dragger"
                    xmlns:attached="clr-namespace:FramePFX.WPF.Themes.Attached"
                    xmlns:c="clr-namespace:FramePFX.WPF.Converters">
    <s:Double x:Key="FloatMinValue">-3.402823E+38</s:Double>
    <s:Double x:Key="FloatMaxValue">3.402823E+38</s:Double>
    <SolidColorBrush x:Key="SeparatorMouseOverBrush" Color="{DynamicResource AColour.AccentTone2.Border.Static}" />

    <Style x:Key="HierarchicalExpanderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}">
                        <DockPanel Background="Transparent" SnapsToDevicePixels="False">
                            <!-- original:  M 1,1.5 L 4.5,5 L 8,1.5  -->
                            <!-- Pointing down:  M 1,0 L 5,4.5 L 9,0  -->
                            <!-- Pointing right: M 1,0 L 5,4 L 1,8 -->
                            <Path x:Name="arrow" Data="M 2,0 L 6,4 L 2,8"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  SnapsToDevicePixels="false"
                                  Stroke="{DynamicResource Expander.Static.Arrow.Stroke}"
                                  StrokeThickness="2" VerticalAlignment="Center"
                                  Width="10" Margin="0,1,0,0" />
                            <ContentPresenter Margin="3,0,0,0" x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                            <Separator x:Name="PART_Separator" Margin="8,0,0,0" IsHitTestVisible="True" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Data" TargetName="arrow" Value="M 0,0 L 4,4.5 L 8,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.MouseOver.Arrow.Stroke}" />
                            <Setter Property="Background" TargetName="PART_Separator" Value="{DynamicResource SeparatorMouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Pressed.Arrow.Stroke}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Expander.Disabled.Arrow.Stroke}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HierarchicalExpanderStyle" TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Static}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" CornerRadius="3"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch">
                        <DockPanel>
                            <Separator Margin="0,5" DockPanel.Dock="Bottom" x:Name="PART_Separator" />
                            <ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                          Content="{TemplateBinding Header}" DockPanel.Dock="Top"
                                          Foreground="{TemplateBinding Foreground}"
                                          FontWeight="{TemplateBinding FontWeight}"
                                          FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                                          FontStyle="{TemplateBinding FontStyle}"
                                          FontStretch="{TemplateBinding FontStretch}"
                                          FontSize="{TemplateBinding FontSize}"
                                          FontFamily="{TemplateBinding FontFamily}"
                                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          Margin="1,1,0,1" MinWidth="0" MinHeight="0"
                                          Padding="{TemplateBinding Padding}"
                                          VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="Stretch"
                                          Style="{StaticResource HierarchicalExpanderToggleButtonStyle}" />
                            <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" Visibility="Collapsed"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="ExpandSite" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ABrush.Foreground.Disabled}" />
                        </Trigger>
                        <Trigger SourceName="HeaderSite" Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="PART_Separator" Value="{DynamicResource SeparatorMouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type pe:PropertyEditorItemContainer}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsCurrentlyApplicable}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsCurrentlyApplicable}" Value="False">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type pe:PropertyEditorItemsControl}" BasedOn="{StaticResource {x:Type ItemsControl}}" />

    <ResourceDictionary x:Key="PropertyEditorDataTemplates">
        <DataTemplate DataType="{x:Type editor:VideoClipDataSingleEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="0" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"         EditingHint="Add to X and Y" DisplayTextOverride="Position" Height="18" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="2" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"       EditingHint="Add to X and Y" DisplayTextOverride="Scale" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="4" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScaleOrigin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditingHint="Add to X and Y" DisplayTextOverride="Origin" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <TextBlock FontWeight="Normal" Padding="6,1" Grid.Row="6" VerticalAlignment="Center" Text="Opacity" Height="18" Margin="0,0,0,0" />
                <TextBlock FontWeight="Normal" Padding="6,1" Grid.Row="8" VerticalAlignment="Center" Text="Media Offset" Height="18" Margin="0,0,0,0" />
                <Grid Grid.Column="2" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaPositionCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaPositionCommand, Mode=OneTime}" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaPositionCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaPositionCommand, Mode=OneTime}" />
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <ToggleButton IsChecked="{Binding MediaPositionAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding MediaPositionAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertMediaPositionKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetMediaPositionCommand, Mode=OneTime}" ToolTip="Reset the media position" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaScaleCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaScaleCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaScaleCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaScaleCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <ToggleButton IsChecked="{Binding MediaScaleAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding MediaScaleAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertMediaScaleKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetMediaScaleCommand, Mode=OneTime}" ToolTip="Reset the media scale" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaScaleOriginCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaScaleOriginCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaScaleOriginCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaScaleOriginCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="2">
                        <ToggleButton IsChecked="{Binding MediaScaleOriginAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding MediaScaleOriginAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertMediaScaleOriginKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetMediaScaleOriginCommand, Mode=OneTime}" ToolTip="Reset the media scale origin" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditOpacityCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditOpacityCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                        <ToggleButton IsChecked="{Binding OpacityAutomationSequence.IsActive, Mode=TwoWay}" ToolTip="Toggle whether this parameter is active or not" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="A" />
                        <ToggleButton IsChecked="{Binding OpacityAutomationSequence.IsOverrideEnabled, Mode=TwoWay}" ToolTip="Toggle override state (essentially enabling or disabling automation)" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0" Content="O" />
                        <Button Command="{Binding InsertOpacityKeyFrameCommand}" ToolTip="Insert Keyframe" Margin="2,0,0,0" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" BorderThickness="0">
                            <Ellipse Width="8" Height="8" Fill="White" />
                        </Button>
                        <Button Command="{Binding ResetOpacityCommand, Mode=OneTime}" ToolTip="Reset the opacity" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="8">
                    <TextBlock Grid.Column="0" Grid.Row="0" Padding="6,2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Text="{Binding MediaFrameOffset, Mode=OneWay}" />
                </Grid>
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="1" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="3" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="5" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="5,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="7" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type editor:VideoClipDataMultipleEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="1" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="0" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothPos, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Position" Height="18" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="2" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScale, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Scale" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <dragger:NumberDragger FontWeight="Normal" Padding="4,1" Grid.Row="4" VerticalAlignment="Center" VerticalContentAlignment="Center" PreviewRoundedPlaces="2" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding BothScaleOrigin, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" DisplayTextOverride="Origin" Height="18" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                <TextBlock FontWeight="Normal" Padding="6,1" Grid.Row="6" VerticalAlignment="Center" Text="Opacity" Height="18" Margin="0,0,0,0" />
                <Grid Grid.Column="2" Grid.Row="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaPositionCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaPositionCommand, Mode=OneTime}" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaPositionY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaPositionCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaPositionCommand, Mode=OneTime}" />
                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding ResetMediaPositionCommand, Mode=OneTime}" ToolTip="Reset the media position" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                        <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                    </Button>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaScaleCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaScaleCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaScaleCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaScaleCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding ResetMediaScaleCommand, Mode=OneTime}" ToolTip="Reset the media scale" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                        <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                    </Button>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="88" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaScaleOriginCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaScaleOriginCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <dragger:NumberDragger Grid.Column="1" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="{StaticResource FloatMinValue}" Maximum="{StaticResource FloatMaxValue}" Value="{Binding MediaScaleOriginY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditMediaScaleOriginCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditMediaScaleOriginCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.001" LargeChange="0.01" MassiveChange="0.05" />
                    <Button Grid.Column="2" HorizontalAlignment="Right" Command="{Binding ResetMediaScaleOriginCommand, Mode=OneTime}" ToolTip="Reset the media scale origin" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                        <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                    </Button>
                </Grid>
                <Grid Grid.Column="2" Grid.Row="6">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <dragger:NumberDragger Grid.Column="0" Grid.Row="0" Padding="4,2" PreviewRoundedPlaces="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" HorizontalContentAlignment="Left" Minimum="0" Maximum="1" Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" EditStartedCommand="{Binding BeginEditOpacityCommand, Mode=OneTime}" EditCompletedCommand="{Binding EndEditOpacityCommand, Mode=OneTime}" TinyChange="0.0001" SmallChange="0.0005" LargeChange="0.0025" MassiveChange="0.05" />
                    <StackPanel Orientation="Horizontal" Grid.Column="1">
                        <Button Command="{Binding ResetOpacityCommand, Mode=OneTime}" ToolTip="Reset the opacity" Width="20" Height="20" attached:CornerRadiusHelper.Value="2" Background="Transparent" Margin="2,0,0,0" BorderThickness="0">
                            <Path Width="12" Height="14" Stretch="Fill" Fill="White" Data="{StaticResource ResetGeometry}" />
                        </Button>
                    </StackPanel>
                </Grid>
                <Border Margin="0,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="1" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="0,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="3" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
                <Border Margin="0,0,0,0" Background="{DynamicResource ABrush.Tone4.Border.Static}" Grid.Row="5" Grid.ColumnSpan="3" Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Center" />
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type editor:ClipDataEditorViewModel}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth0}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth1}" />
                    <ColumnDefinition Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}, Path=ColumnWidth2}" />
                </Grid.ColumnDefinitions>
                <TextBlock FontWeight="Normal" Padding="6,2" VerticalAlignment="Center" Text="Display Name" Height="18" Margin="0,0,0,0" />
                <TextBox Grid.Column="2" FontWeight="Normal" Padding="2,1" VerticalAlignment="Center" Text="{Binding DisplayName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="0,0,0,3" />
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type primitives:CheckBoxEditorViewModel}">
            <StackPanel Orientation="Horizontal">
                <CheckBox Content="{Binding Label, Mode=OneWay}" IsChecked="{Binding IsChecked}" />
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type primitives:CheckBoxGridEditorViewModel}">
            <ItemsControl ItemsSource="{Binding Editors, Mode=OneTime}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid IsItemsHost="True" Rows="1" Columns="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}, Path=Items.Count}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <StaticResource>
                        <StaticResource.ResourceKey>
                            <DataTemplateKey DataType="{x:Type primitives:CheckBoxEditorViewModel}" />
                        </StaticResource.ResourceKey>
                    </StaticResource>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="{x:Type ContentPresenter}">
                        <Setter Property="Margin" Value="0,0,2,0" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>
        </DataTemplate>
    </ResourceDictionary>

    <Style TargetType="{x:Type pe:PropertyEditor}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type pe:PropertyEditor}">
                    <pe:PropertyEditorItemsControl ItemsSource="{TemplateBinding ApplicableItems}" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <ItemsControl.Resources>
                            <ResourceDictionary>
                                <ResourceDictionary.MergedDictionaries>
                                    <StaticResource ResourceKey="PropertyEditorDataTemplates" />
                                </ResourceDictionary.MergedDictionaries>
                                <DataTemplate DataType="{x:Type pec:PropertyGroupViewModel}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="{Binding ColumnWidth0, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                            <ColumnDefinition Width="{Binding ColumnWidth1, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                            <ColumnDefinition Width="{Binding ColumnWidth2, RelativeSource={RelativeSource AncestorType={x:Type pe:PropertyEditor}}}" />
                                        </Grid.ColumnDefinitions>
                                        <Expander Grid.ColumnSpan="3" Margin="4,0,4,0" Visibility="{Binding IsCurrentlyApplicable, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}"
                                                  Style="{StaticResource HierarchicalExpanderStyle}"
                                                  Header="{Binding Id, Mode=OneTime}" FontWeight="Bold"
                                                  IsExpanded="{Binding IsExpanded, Mode=TwoWay}"
                                                  x:Name="PART_Expander">
                                            <StackPanel>
                                                <pe:PropertyEditorItemsControl FontWeight="Normal" Margin="0,0,0,0" ItemsSource="{Binding PropertyObjects, Mode=OneTime}" Visibility="{Binding IsCurrentlyApplicable, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}">
                                                    <ItemsControl.ItemContainerStyle>
                                                        <Style TargetType="{x:Type pe:PropertyEditorItemContainer}" BasedOn="{StaticResource {x:Type pe:PropertyEditorItemContainer}}">
                                                            <Setter Property="Margin" Value="0,3,0,0" />
                                                            <Setter Property="Visibility" Value="{Binding IsCurrentlyApplicable, Converter={x:Static c:BoolToVisibilityConverter.BoolToVisibleOrCollapsed}}" />
                                                        </Style>
                                                    </ItemsControl.ItemContainerStyle>
                                                </pe:PropertyEditorItemsControl>
                                            </StackPanel>
                                        </Expander>
                                    </Grid>
                                </DataTemplate>
                            </ResourceDictionary>
                        </ItemsControl.Resources>
                    </pe:PropertyEditorItemsControl>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>